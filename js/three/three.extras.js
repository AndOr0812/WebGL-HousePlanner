THREE.FirstPersonControls=function(a,b){function c(a){a.preventDefault()}function e(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=void 0!==b?b:document;this.enabled=!0;this.movementSpeed=1;this.lookSpeed=.005;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.heightMax=1;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=
this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=0;this.mouseDragOn=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.onMouseDown=function(a){this.domElement!==
document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):
(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=
!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=!1;break;case 70:this.moveDown=!1}};this.update=function(a){if(!1!==this.enabled){if(this.heightSpeed){var b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin;this.autoSpeedFactor=a*b*this.heightCoef}else this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(b+this.autoSpeedFactor));
this.moveBackward&&this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&this.object.translateX(b);this.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);a*=this.lookSpeed;this.activeLook||(a=0);b=1;this.constrainVertical&&(b=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a*b);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=THREE.Math.degToRad(90-this.lat);this.theta=THREE.Math.degToRad(this.lon);
this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax));a=this.target;b=this.object.position;a.x=b.x+100*Math.sin(this.phi)*Math.cos(this.theta);a.y=b.y+100*Math.cos(this.phi);a.z=b.z+100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(a)}};this.dispose=function(){this.domElement.removeEventListener("contextmenu",c,!1);this.domElement.removeEventListener("mousedown",d,!1);this.domElement.removeEventListener("mousemove",f,!1);this.domElement.removeEventListener("mouseup",
l,!1);window.removeEventListener("keydown",k,!1);window.removeEventListener("keyup",q,!1)};var f=e(this,this.onMouseMove),d=e(this,this.onMouseDown),l=e(this,this.onMouseUp),k=e(this,this.onKeyDown),q=e(this,this.onKeyUp);this.domElement.addEventListener("contextmenu",c,!1);this.domElement.addEventListener("mousemove",f,!1);this.domElement.addEventListener("mousedown",d,!1);this.domElement.addEventListener("mouseup",l,!1);window.addEventListener("keydown",k,!1);window.addEventListener("keyup",q,!1);
this.handleResize()};THREE.OrbitControls=function(a,b){function c(){return Math.pow(.95,h.zoomSpeed)}function e(a){h.object instanceof THREE.PerspectiveCamera?M/=a:h.object instanceof THREE.OrthographicCamera?(h.object.zoom=Math.max(h.minZoom,Math.min(h.maxZoom,h.object.zoom*a)),h.object.updateProjectionMatrix(),I=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),h.enableZoom=!1)}function f(a){h.object instanceof THREE.PerspectiveCamera?M*=a:h.object instanceof THREE.OrthographicCamera?
(h.object.zoom=Math.max(h.minZoom,Math.min(h.maxZoom,h.object.zoom/a)),h.object.updateProjectionMatrix(),I=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),h.enableZoom=!1)}function d(a){if(!1!==h.enabled){a.preventDefault();if(a.button===h.mouseButtons.ORBIT){if(!1===h.enableRotate)return;O.set(a.clientX,a.clientY);E=x.ROTATE}else if(a.button===h.mouseButtons.ZOOM){if(!1===h.enableZoom)return;U.set(a.clientX,a.clientY);E=x.DOLLY}else if(a.button===
h.mouseButtons.PAN){if(!1===h.enablePan)return;C.set(a.clientX,a.clientY);E=x.PAN}E!==x.NONE&&(document.addEventListener("mousemove",l,!1),document.addEventListener("mouseup",k,!1),h.dispatchEvent(y))}}function l(a){!1!==h.enabled&&(a.preventDefault(),E===x.ROTATE?!1!==h.enableRotate&&(K.set(a.clientX,a.clientY),B.subVectors(K,O),a=h.domElement===document?h.domElement.body:h.domElement,A.theta-=2*Math.PI*B.x/a.clientWidth*h.rotateSpeed,A.phi-=2*Math.PI*B.y/a.clientHeight*h.rotateSpeed,O.copy(K),h.update()):
E===x.DOLLY?!1!==h.enableZoom&&(Q.set(a.clientX,a.clientY),J.subVectors(Q,U),0<J.y?e(c()):0>J.y&&f(c()),U.copy(Q),h.update()):E===x.PAN&&!1!==h.enablePan&&(D.set(a.clientX,a.clientY),G.subVectors(D,C),R(G.x,G.y),C.copy(D),h.update()))}function k(a){!1!==h.enabled&&(document.removeEventListener("mousemove",l,!1),document.removeEventListener("mouseup",k,!1),h.dispatchEvent(N),E=x.NONE)}function q(a){!1===h.enabled||!1===h.enableZoom||E!==x.NONE&&E!==x.ROTATE||(a.preventDefault(),a.stopPropagation(),
0>a.deltaY?f(c()):0<a.deltaY&&e(c()),h.update(),h.dispatchEvent(y),h.dispatchEvent(N))}function g(a){if(!1!==h.enabled&&!1!==h.enableKeys&&!1!==h.enablePan)switch(a.keyCode){case h.keys.UP:R(0,h.keyPanSpeed);h.update();break;case h.keys.BOTTOM:R(0,-h.keyPanSpeed);h.update();break;case h.keys.LEFT:R(h.keyPanSpeed,0);h.update();break;case h.keys.RIGHT:R(-h.keyPanSpeed,0),h.update()}}function n(a){if(!1!==h.enabled){switch(a.touches.length){case 1:if(!1===h.enableRotate)return;O.set(a.touches[0].pageX,
a.touches[0].pageY);E=x.TOUCH_ROTATE;break;case 2:if(!1===h.enableZoom)return;var b=a.touches[0].pageX-a.touches[1].pageX;a=a.touches[0].pageY-a.touches[1].pageY;U.set(0,Math.sqrt(b*b+a*a));E=x.TOUCH_DOLLY;break;case 3:if(!1===h.enablePan)return;C.set(a.touches[0].pageX,a.touches[0].pageY);E=x.TOUCH_PAN;break;default:E=x.NONE}E!==x.NONE&&h.dispatchEvent(y)}}function r(a){if(!1!==h.enabled)switch(a.preventDefault(),a.stopPropagation(),a.touches.length){case 1:if(!1===h.enableRotate)break;if(E!==x.TOUCH_ROTATE)break;
K.set(a.touches[0].pageX,a.touches[0].pageY);B.subVectors(K,O);var b=h.domElement===document?h.domElement.body:h.domElement;A.theta-=2*Math.PI*B.x/b.clientWidth*h.rotateSpeed;A.phi-=2*Math.PI*B.y/b.clientHeight*h.rotateSpeed;O.copy(K);h.update();break;case 2:if(!1===h.enableZoom)break;if(E!==x.TOUCH_DOLLY)break;b=a.touches[0].pageX-a.touches[1].pageX;a=a.touches[0].pageY-a.touches[1].pageY;Q.set(0,Math.sqrt(b*b+a*a));J.subVectors(Q,U);0<J.y?f(c()):0>J.y&&e(c());U.copy(Q);h.update();break;case 3:if(!1===
h.enablePan)break;if(E!==x.TOUCH_PAN)break;D.set(a.touches[0].pageX,a.touches[0].pageY);G.subVectors(D,C);R(G.x,G.y);C.copy(D);h.update();break;default:E=x.NONE}}function m(a){!1!==h.enabled&&(h.dispatchEvent(N),E=x.NONE)}function v(a){a.preventDefault()}this.object=a;this.domElement=void 0!==b?b:document;this.enabled=!0;this.target=new THREE.Vector3;this.minDistance=0;this.maxDistance=Infinity;this.minZoom=0;this.maxZoom=Infinity;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.minAzimuthAngle=
-Infinity;this.maxAzimuthAngle=Infinity;this.enableDamping=!1;this.dampingFactor=.25;this.enableZoom=!0;this.zoomSpeed=1;this.enableRotate=!0;this.rotateSpeed=1;this.enablePan=!0;this.keyPanSpeed=7;this.autoRotate=!1;this.autoRotateSpeed=2;this.enableKeys=!0;this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40};this.mouseButtons={ORBIT:THREE.MOUSE.LEFT,ZOOM:THREE.MOUSE.MIDDLE,PAN:THREE.MOUSE.RIGHT};this.target0=this.target.clone();this.position0=this.object.position.clone();this.zoom0=this.object.zoom;this.getPolarAngle=
function(){return p.phi};this.getAzimuthalAngle=function(){return p.theta};this.reset=function(){h.target.copy(h.target0);h.object.position.copy(h.position0);h.object.zoom=h.zoom0;h.object.updateProjectionMatrix();h.dispatchEvent(t);h.update();E=x.NONE};this.update=function(){var b=new THREE.Vector3,c=(new THREE.Quaternion).setFromUnitVectors(a.up,new THREE.Vector3(0,1,0)),e=c.clone().inverse(),d=new THREE.Vector3,f=new THREE.Quaternion;return function(){var a=h.object.position;b.copy(a).sub(h.target);
b.applyQuaternion(c);p.setFromVector3(b);h.autoRotate&&E===x.NONE&&(A.theta-=2*Math.PI/60/60*h.autoRotateSpeed);p.theta+=A.theta;p.phi+=A.phi;p.theta=Math.max(h.minAzimuthAngle,Math.min(h.maxAzimuthAngle,p.theta));p.phi=Math.max(h.minPolarAngle,Math.min(h.maxPolarAngle,p.phi));p.makeSafe();p.radius*=M;p.radius=Math.max(h.minDistance,Math.min(h.maxDistance,p.radius));h.target.add(w);b.setFromSpherical(p);b.applyQuaternion(e);a.copy(h.target).add(b);h.object.lookAt(h.target);!0===h.enableDamping?(A.theta*=
1-h.dampingFactor,A.phi*=1-h.dampingFactor):A.set(0,0,0);M=1;w.set(0,0,0);return I||d.distanceToSquared(h.object.position)>P||8*(1-f.dot(h.object.quaternion))>P?(h.dispatchEvent(t),d.copy(h.object.position),f.copy(h.object.quaternion),I=!1,!0):!1}}();this.dispose=function(){h.domElement.removeEventListener("contextmenu",v,!1);h.domElement.removeEventListener("mousedown",d,!1);h.domElement.removeEventListener("wheel",q,!1);h.domElement.removeEventListener("touchstart",n,!1);h.domElement.removeEventListener("touchend",
m,!1);h.domElement.removeEventListener("touchmove",r,!1);document.removeEventListener("mousemove",l,!1);document.removeEventListener("mouseup",k,!1);window.removeEventListener("keydown",g,!1)};var h=this,t={type:"change"},y={type:"start"},N={type:"end"},x={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},E=x.NONE,P=1E-6,p=new THREE.Spherical,A=new THREE.Spherical,M=1,w=new THREE.Vector3,I=!1,O=new THREE.Vector2,K=new THREE.Vector2,B=new THREE.Vector2,C=new THREE.Vector2,D=
new THREE.Vector2,G=new THREE.Vector2,U=new THREE.Vector2,Q=new THREE.Vector2,J=new THREE.Vector2,S=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixColumn(c,0);a.multiplyScalar(-b);w.add(a)}}(),W=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixColumn(c,1);a.multiplyScalar(b);w.add(a)}}(),R=function(){var a=new THREE.Vector3;return function(b,c){var e=h.domElement===document?h.domElement.body:h.domElement;if(h.object instanceof THREE.PerspectiveCamera){a.copy(h.object.position).sub(h.target);
var d=a.length(),d=d*Math.tan(h.object.fov/2*Math.PI/180);S(2*b*d/e.clientHeight,h.object.matrix);W(2*c*d/e.clientHeight,h.object.matrix)}else h.object instanceof THREE.OrthographicCamera?(S(b*(h.object.right-h.object.left)/h.object.zoom/e.clientWidth,h.object.matrix),W(c*(h.object.top-h.object.bottom)/h.object.zoom/e.clientHeight,h.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),h.enablePan=!1)}}();h.domElement.addEventListener("contextmenu",
v,!1);h.domElement.addEventListener("mousedown",d,!1);h.domElement.addEventListener("wheel",q,!1);h.domElement.addEventListener("touchstart",n,!1);h.domElement.addEventListener("touchend",m,!1);h.domElement.addEventListener("touchmove",r,!1);window.addEventListener("keydown",g,!1);this.update()};THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype);THREE.OrbitControls.prototype.constructor=THREE.OrbitControls;
Object.defineProperties(THREE.OrbitControls.prototype,{center:{get:function(){console.warn("THREE.OrbitControls: .center has been renamed to .target");return this.target}},noZoom:{get:function(){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.");return!this.enableZoom},set:function(a){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.");this.enableZoom=!a}},noRotate:{get:function(){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.");
return!this.enableRotate},set:function(a){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.");this.enableRotate=!a}},noPan:{get:function(){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.");return!this.enablePan},set:function(a){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.");this.enablePan=!a}},noKeys:{get:function(){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.");
return!this.enableKeys},set:function(a){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.");this.enableKeys=!a}},staticMoving:{get:function(){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.");return!this.enableDamping},set:function(a){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.");this.enableDamping=!a}},dynamicDampingFactor:{get:function(){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.");
return this.dampingFactor},set:function(a){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.");this.dampingFactor=a}}});var TransformConstrolsHighlighted=!1;
(function(){var a=function(a){THREE.MeshBasicMaterial.call(this);this.depthWrite=this.depthTest=!1;this.side=THREE.FrontSide;this.transparent=!0;this.setValues(a);this.oldColor=this.color.clone();this.oldOpacity=this.opacity;this.highlight=function(a){a?(this.color.setRGB(1,1,0),this.opacity=1):(this.color.copy(this.oldColor),this.opacity=this.oldOpacity)}};a.prototype=Object.create(THREE.MeshBasicMaterial.prototype);a.prototype.constructor=a;var b=function(a){THREE.LineBasicMaterial.call(this);this.depthWrite=
this.depthTest=!1;this.transparent=!0;this.linewidth=5;this.setValues(a);this.oldColor=this.color.clone();this.oldOpacity=this.opacity;this.highlight=function(a){a?(this.color.setRGB(1,1,0),this.opacity=1):(this.color.copy(this.oldColor),this.opacity=this.oldOpacity)}};b.prototype=Object.create(THREE.LineBasicMaterial.prototype);b.prototype.constructor=b;new a({visible:!1,transparent:!1});THREE.TransformGizmo=function(){var a=this;this.init=function(){THREE.Object3D.call(this);this.handles=new THREE.Object3D;
this.pickers=new THREE.Object3D;this.planes=new THREE.Object3D;this.add(this.handles);this.add(this.pickers);this.add(this.planes);var a=new THREE.PlaneBufferGeometry(50,50,2,2),b=new THREE.MeshBasicMaterial({visible:!1,side:THREE.DoubleSide}),a={XY:new THREE.Mesh(a,b),YZ:new THREE.Mesh(a,b),XZ:new THREE.Mesh(a,b),XYZE:new THREE.Mesh(a,b)};this.activePlane=a.XYZE;a.YZ.rotation.set(0,Math.PI/2,0);a.XZ.rotation.set(-Math.PI/2,0,0);for(var c in a)a[c].name=c,this.planes.add(a[c]),this.planes[c]=a[c];
a=function(a,b){for(var e in a)for(c=a[e].length;c--;){var d=a[e][c][0],f=a[e][c][1],l=a[e][c][2];d.name=e;f&&d.position.set(f[0],f[1],f[2]);l&&d.rotation.set(l[0],l[1],l[2]);b.add(d)}};a(this.handleGizmos,this.handles);a(this.pickerGizmos,this.pickers);this.traverse(function(a){if(a instanceof THREE.Mesh){a.updateMatrix();var b=a.geometry.clone();b.applyMatrix(a.matrix);a.geometry=b;a.position.set(0,0,0);a.rotation.set(0,0,0);a.scale.set(1,1,1)}})};this.highlight=function(a){this.traverse(function(b){b.material&&
b.material.highlight&&(b.name===a?b.material.highlight(!0):b.material.highlight(!1))})};this.hide=function(){this.traverse(function(a){a.visible=!1})};this.show=function(){this.traverse(function(b){b.visible=!0;b.parent==a.pickers&&(b.visible=!1);b.parent==a.planes&&(b.visible=!1)});this.activePlane.visible=!1}};THREE.TransformGizmo.prototype=Object.create(THREE.Object3D.prototype);THREE.TransformGizmo.prototype.constructor=THREE.TransformGizmo;THREE.TransformGizmo.prototype.update=function(a,b){var c=
new THREE.Vector3(0,0,0),e=new THREE.Vector3(0,1,0),l=new THREE.Matrix4;this.traverse(function(d){-1!==d.name.search("E")?d.quaternion.setFromRotationMatrix(l.lookAt(b,c,e)):-1===d.name.search("X")&&-1===d.name.search("Y")&&-1===d.name.search("Z")||d.quaternion.setFromEuler(a)})};THREE.TransformGizmoTranslate=function(){THREE.TransformGizmo.call(this);var c=new THREE.Geometry,e=new THREE.Mesh(new THREE.CylinderGeometry(0,.05,.2,12,1,!1));e.position.y=.5;e.updateMatrix();c.merge(e.geometry,e.matrix);
e=new THREE.BufferGeometry;e.addAttribute("position",new THREE.Float32BufferAttribute([0,0,0,1,0,0],3));var f=new THREE.BufferGeometry;f.addAttribute("position",new THREE.Float32BufferAttribute([0,0,0,0,1,0],3));var d=new THREE.BufferGeometry;d.addAttribute("position",new THREE.Float32BufferAttribute([0,0,0,0,0,1],3));this.handleGizmos={X:[[new THREE.Mesh(c,new a({color:16711680})),[.6,0,0],[0,0,-Math.PI/2]],[new THREE.Line(e,new b({color:16711680}))]],Y:[[new THREE.Mesh(c,new a({color:65280})),[0,
.6,0]],[new THREE.Line(f,new b({color:65280}))]],Z:[[new THREE.Mesh(c,new a({color:255})),[0,0,.6],[Math.PI/2,0,0]],[new THREE.Line(d,new b({color:255}))]],XYZ:[[new THREE.Mesh(new THREE.OctahedronGeometry(.18,0),new a({color:16777215,opacity:.25})),[0,0,0],[0,0,0]]],XY:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.5,.5),new a({color:16776960,opacity:.25})),[.26,.26,0]]],YZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.5,.5),new a({color:65535,opacity:.25})),[0,.26,.26],[0,Math.PI/2,0]]],XZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.5,
.5),new a({color:16711935,opacity:.25})),[.26,0,.26],[-Math.PI/2,0,0]]]};this.pickerGizmos={X:[[new THREE.Mesh(new THREE.CylinderBufferGeometry(.2,0,1,4,1,!1),new a({color:16711680,opacity:.25})),[.6,0,0],[0,0,-Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.CylinderBufferGeometry(.2,0,1,4,1,!1),new a({color:65280,opacity:.25})),[0,.6,0]]],Z:[[new THREE.Mesh(new THREE.CylinderBufferGeometry(.2,0,1,4,1,!1),new a({color:255,opacity:.25})),[0,0,.6],[Math.PI/2,0,0]]],XYZ:[[new THREE.Mesh(new THREE.OctahedronGeometry(.18,
0),new a({color:16777215,opacity:.25}))]],XY:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.6,.6),new a({color:16776960,opacity:.25})),[.26,.26,0]]],YZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.6,.6),new a({color:65535,opacity:.25})),[0,.26,.26],[0,Math.PI/2,0]]],XZ:[[new THREE.Mesh(new THREE.PlaneBufferGeometry(.6,.6),new a({color:16711935,opacity:.25})),[.26,0,.26],[-Math.PI/2,0,0]]]};this.setActivePlane=function(a,b){var c=new THREE.Matrix4;b.applyMatrix4(c.getInverse(c.extractRotation(this.planes.XY.matrixWorld)));
"X"===a&&(this.activePlane=this.planes.XY,Math.abs(b.y)>Math.abs(b.z)&&(this.activePlane=this.planes.XZ));"Y"===a&&(this.activePlane=this.planes.XY,Math.abs(b.x)>Math.abs(b.z)&&(this.activePlane=this.planes.YZ));"Z"===a&&(this.activePlane=this.planes.XZ,Math.abs(b.x)>Math.abs(b.y)&&(this.activePlane=this.planes.YZ));"XYZ"===a&&(this.activePlane=this.planes.XYZE);"XY"===a&&(this.activePlane=this.planes.XY);"YZ"===a&&(this.activePlane=this.planes.YZ);"XZ"===a&&(this.activePlane=this.planes.XZ);this.hide();
this.show()};this.init()};THREE.TransformGizmoTranslate.prototype=Object.create(THREE.TransformGizmo.prototype);THREE.TransformGizmoTranslate.prototype.constructor=THREE.TransformGizmoTranslate;THREE.TransformGizmoRotate=function(){THREE.TransformGizmo.call(this);var c=function(a,b,c){var e=new THREE.BufferGeometry,d=[];c=c?c:1;for(var f=0;f<=64*c;++f)"x"===b&&d.push(0,Math.cos(f/32*Math.PI)*a,Math.sin(f/32*Math.PI)*a),"y"===b&&d.push(Math.cos(f/32*Math.PI)*a,0,Math.sin(f/32*Math.PI)*a),"z"===b&&
d.push(Math.sin(f/32*Math.PI)*a,Math.cos(f/32*Math.PI)*a,0);e.addAttribute("position",new THREE.Float32BufferAttribute(d,3));return e};this.handleGizmos={X:[[new THREE.Line(new c(1,"x",.5),new b({color:16711680}))]],Y:[[new THREE.Line(new c(1,"y",.5),new b({color:65280}))]],Z:[[new THREE.Line(new c(1,"z",.5),new b({color:255}))]],E:[[new THREE.Line(new c(1.25,"z",1),new b({color:13421568}))]],XYZE:[[new THREE.Line(new c(1,"z",1),new b({color:7895160}))]]};this.pickerGizmos={X:[[new THREE.Mesh(new THREE.TorusBufferGeometry(1,
.12,4,12,Math.PI),new a({color:16711680,opacity:.25})),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.TorusBufferGeometry(1,.12,4,12,Math.PI),new a({color:65280,opacity:.25})),[0,0,0],[Math.PI/2,0,0]]],Z:[[new THREE.Mesh(new THREE.TorusBufferGeometry(1,.12,4,12,Math.PI),new a({color:255,opacity:.25})),[0,0,0],[0,0,-Math.PI/2]]],E:[[new THREE.Mesh(new THREE.TorusBufferGeometry(1.25,.12,2,24),new a({color:16776960,opacity:.25}))]],XYZE:[[new THREE.Mesh]]};this.setActivePlane=function(a){"E"===
a&&(this.activePlane=this.planes.XYZE);"X"===a&&(this.activePlane=this.planes.YZ);"Y"===a&&(this.activePlane=this.planes.XZ);"Z"===a&&(this.activePlane=this.planes.XY);this.hide();this.show()};this.update=function(a,b){THREE.TransformGizmo.prototype.update.apply(this,arguments);var c=new THREE.Matrix4,e=new THREE.Euler(0,0,1),f=new THREE.Quaternion,q=new THREE.Vector3(1,0,0),g=new THREE.Vector3(0,1,0),n=new THREE.Vector3(0,0,1),r=new THREE.Quaternion,m=new THREE.Quaternion,v=new THREE.Quaternion,
h=b.clone();e.copy(this.planes.XY.rotation);f.setFromEuler(e);c.makeRotationFromQuaternion(f).getInverse(c);h.applyMatrix4(c);this.traverse(function(a){f.setFromEuler(e);"X"===a.name&&(r.setFromAxisAngle(q,Math.atan2(-h.y,h.z)),f.multiplyQuaternions(f,r),a.quaternion.copy(f));"Y"===a.name&&(m.setFromAxisAngle(g,Math.atan2(h.x,h.z)),f.multiplyQuaternions(f,m),a.quaternion.copy(f));"Z"===a.name&&(v.setFromAxisAngle(n,Math.atan2(h.y,h.x)),f.multiplyQuaternions(f,v),a.quaternion.copy(f))})};this.init()};
THREE.TransformGizmoRotate.prototype=Object.create(THREE.TransformGizmo.prototype);THREE.TransformGizmoRotate.prototype.constructor=THREE.TransformGizmoRotate;THREE.TransformGizmoScale=function(){THREE.TransformGizmo.call(this);var c=new THREE.Geometry,e=new THREE.Mesh(new THREE.BoxGeometry(.15,.15,.15));e.position.y=.5;e.updateMatrix();c.merge(e.geometry,e.matrix);e=new THREE.BufferGeometry;e.addAttribute("position",new THREE.Float32BufferAttribute([0,0,0,1,0,0],3));var f=new THREE.BufferGeometry;
f.addAttribute("position",new THREE.Float32BufferAttribute([0,0,0,0,1,0],3));var d=new THREE.BufferGeometry;d.addAttribute("position",new THREE.Float32BufferAttribute([0,0,0,0,0,1],3));this.handleGizmos={X:[[new THREE.Mesh(c,new a({color:16711680})),[.5,0,0],[0,0,-Math.PI/2]],[new THREE.Line(e,new b({color:16711680}))]],Y:[[new THREE.Mesh(c,new a({color:65280})),[0,.5,0]],[new THREE.Line(f,new b({color:65280}))]],Z:[[new THREE.Mesh(c,new a({color:255})),[0,0,.5],[Math.PI/2,0,0]],[new THREE.Line(d,
new b({color:255}))]],XYZ:[[new THREE.Mesh(new THREE.BoxBufferGeometry(.125,.125,.125),new a({color:16777215,opacity:.25}))]]};this.pickerGizmos={X:[[new THREE.Mesh(new THREE.CylinderBufferGeometry(.2,0,1,4,1,!1),new a({color:16711680,opacity:.25})),[.6,0,0],[0,0,-Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.CylinderBufferGeometry(.2,0,1,4,1,!1),new a({color:65280,opacity:.25})),[0,.6,0]]],Z:[[new THREE.Mesh(new THREE.CylinderBufferGeometry(.2,0,1,4,1,!1),new a({color:255,opacity:.25})),[0,0,.6],[Math.PI/
2,0,0]]],XYZ:[[new THREE.Mesh(new THREE.BoxBufferGeometry(.4,.4,.4),new a({color:16777215,opacity:.25}))]]};this.setActivePlane=function(a,b){var c=new THREE.Matrix4;b.applyMatrix4(c.getInverse(c.extractRotation(this.planes.XY.matrixWorld)));"X"===a&&(this.activePlane=this.planes.XY,Math.abs(b.y)>Math.abs(b.z)&&(this.activePlane=this.planes.XZ));"Y"===a&&(this.activePlane=this.planes.XY,Math.abs(b.x)>Math.abs(b.z)&&(this.activePlane=this.planes.YZ));"Z"===a&&(this.activePlane=this.planes.XZ,Math.abs(b.x)>
Math.abs(b.y)&&(this.activePlane=this.planes.YZ));"XYZ"===a&&(this.activePlane=this.planes.XYZE);this.hide();this.show()};this.init()};THREE.TransformGizmoScale.prototype=Object.create(THREE.TransformGizmo.prototype);THREE.TransformGizmoScale.prototype.constructor=THREE.TransformGizmoScale;THREE.TransformControls=function(a,b){function c(a){if(void 0!==g.object&&!0!==r&&(void 0===a.button||0===a.button)){a.preventDefault();var b=q(a.changedTouches?a.changedTouches[0]:a,m[n].pickers.children),c=null;
b&&(c=b.object.name,a.preventDefault());g.axis!==c&&(g.axis=c,g.update(),g.dispatchEvent(t))}}function d(a){if(void 0!==g.object&&!0!==r&&(void 0===a.button||0===a.button)){var b=a.changedTouches?a.changedTouches[0]:a;if(0===b.button||void 0===b.button){var c=q(b,m[n].pickers.children);c&&(a.preventDefault(),a.stopPropagation(),g.dispatchEvent(y),g.axis=c.object.name,g.update(),K.copy(F).sub(T).normalize(),m[n].setActivePlane(g.axis,K),a=q(b,[m[n].activePlane]))&&(ca.copy(g.object.position),L.copy(g.object.scale),
ea.extractRotation(g.object.matrix),z.extractRotation(g.object.matrixWorld),Z.extractRotation(g.object.parent.matrixWorld),aa.setFromMatrixScale(B.getInverse(g.object.parent.matrixWorld)),A.copy(a.point))}r=!0}}function e(a){if(void 0!==g.object&&null!==g.axis&&!1!==r&&(void 0===a.button||0===a.button)){var b=q(a.changedTouches?a.changedTouches[0]:a,[m[n].activePlane]);if(!1!==b){a.preventDefault();a.stopPropagation();p.copy(b.point);if("translate"===n){p.sub(A);p.multiply(aa);"local"===g.space&&
(p.applyMatrix4(B.getInverse(z)),-1===g.axis.search("X")&&(p.x=0),-1===g.axis.search("Y")&&(p.y=0),-1===g.axis.search("Z")&&(p.z=0),p.applyMatrix4(ea),g.object.position.copy(ca),g.object.position.add(p));if("world"===g.space||-1!==g.axis.search("XYZ"))-1===g.axis.search("X")&&(p.x=0),-1===g.axis.search("Y")&&(p.y=0),-1===g.axis.search("Z")&&(p.z=0),p.applyMatrix4(B.getInverse(Z)),g.object.position.copy(ca),g.object.position.add(p);null!==g.translationSnap&&("local"===g.space&&g.object.position.applyMatrix4(B.getInverse(z)),
-1!==g.axis.search("X")&&(g.object.position.x=Math.round(g.object.position.x/g.translationSnap)*g.translationSnap),-1!==g.axis.search("Y")&&(g.object.position.y=Math.round(g.object.position.y/g.translationSnap)*g.translationSnap),-1!==g.axis.search("Z")&&(g.object.position.z=Math.round(g.object.position.z/g.translationSnap)*g.translationSnap),"local"===g.space&&g.object.position.applyMatrix4(z))}else"scale"===n?(p.sub(A),p.multiply(aa),"local"===g.space&&("XYZ"===g.axis?(I=1+p.y/Math.max(L.x,L.y,
L.z),g.object.scale.x=L.x*I,g.object.scale.y=L.y*I,g.object.scale.z=L.z*I):(p.applyMatrix4(B.getInverse(z)),"X"===g.axis&&(g.object.scale.x=L.x*(1+p.x/L.x)),"Y"===g.axis&&(g.object.scale.y=L.y*(1+p.y/L.y)),"Z"===g.axis&&(g.object.scale.z=L.z*(1+p.z/L.z))))):"rotate"===n&&(p.sub(T),p.multiply(aa),C.copy(A).sub(T),C.multiply(aa),"E"===g.axis?(p.applyMatrix4(B.getInverse(O)),C.applyMatrix4(B.getInverse(O)),M.set(Math.atan2(p.z,p.y),Math.atan2(p.x,p.z),Math.atan2(p.y,p.x)),w.set(Math.atan2(C.z,C.y),Math.atan2(C.x,
C.z),Math.atan2(C.y,C.x)),D.setFromRotationMatrix(B.getInverse(Z)),Y.setFromAxisAngle(K,M.z-w.z),J.setFromRotationMatrix(z),D.multiplyQuaternions(D,Y),D.multiplyQuaternions(D,J),g.object.quaternion.copy(D)):"XYZE"===g.axis?(Y.setFromEuler(p.clone().cross(C).normalize()),D.setFromRotationMatrix(B.getInverse(Z)),S.setFromAxisAngle(Y,-p.clone().angleTo(C)),J.setFromRotationMatrix(z),D.multiplyQuaternions(D,S),D.multiplyQuaternions(D,J),g.object.quaternion.copy(D)):"local"===g.space?(p.applyMatrix4(B.getInverse(z)),
C.applyMatrix4(B.getInverse(z)),M.set(Math.atan2(p.z,p.y),Math.atan2(p.x,p.z),Math.atan2(p.y,p.x)),w.set(Math.atan2(C.z,C.y),Math.atan2(C.x,C.z),Math.atan2(C.y,C.x)),J.setFromRotationMatrix(ea),null!==g.rotationSnap?(S.setFromAxisAngle(G,Math.round((M.x-w.x)/g.rotationSnap)*g.rotationSnap),W.setFromAxisAngle(U,Math.round((M.y-w.y)/g.rotationSnap)*g.rotationSnap),R.setFromAxisAngle(Q,Math.round((M.z-w.z)/g.rotationSnap)*g.rotationSnap)):(S.setFromAxisAngle(G,M.x-w.x),W.setFromAxisAngle(U,M.y-w.y),
R.setFromAxisAngle(Q,M.z-w.z)),"X"===g.axis&&J.multiplyQuaternions(J,S),"Y"===g.axis&&J.multiplyQuaternions(J,W),"Z"===g.axis&&J.multiplyQuaternions(J,R),g.object.quaternion.copy(J)):"world"===g.space&&(M.set(Math.atan2(p.z,p.y),Math.atan2(p.x,p.z),Math.atan2(p.y,p.x)),w.set(Math.atan2(C.z,C.y),Math.atan2(C.x,C.z),Math.atan2(C.y,C.x)),D.setFromRotationMatrix(B.getInverse(Z)),null!==g.rotationSnap?(S.setFromAxisAngle(G,Math.round((M.x-w.x)/g.rotationSnap)*g.rotationSnap),W.setFromAxisAngle(U,Math.round((M.y-
w.y)/g.rotationSnap)*g.rotationSnap),R.setFromAxisAngle(Q,Math.round((M.z-w.z)/g.rotationSnap)*g.rotationSnap)):(S.setFromAxisAngle(G,M.x-w.x),W.setFromAxisAngle(U,M.y-w.y),R.setFromAxisAngle(Q,M.z-w.z)),J.setFromRotationMatrix(z),"X"===g.axis&&D.multiplyQuaternions(D,S),"Y"===g.axis&&D.multiplyQuaternions(D,W),"Z"===g.axis&&D.multiplyQuaternions(D,R),D.multiplyQuaternions(D,J),g.object.quaternion.copy(D)));g.update();g.dispatchEvent(t);g.dispatchEvent(x)}}}function k(a){a.preventDefault();if(void 0===
a.button||0===a.button)r&&null!==g.axis&&(N.mode=n,g.dispatchEvent(N)),r=!1,"TouchEvent"in window&&a instanceof TouchEvent?(g.axis=null,g.update(),g.dispatchEvent(t)):c(a)}function q(c,d){var e=b.getBoundingClientRect();P.set((c.clientX-e.left)/e.width*2-1,-((c.clientY-e.top)/e.height*2)+1);E.setFromCamera(P,a);e=E.intersectObjects(d,!0);TransformConstrolsHighlighted=0<e.length?!0:!1;return e[0]?e[0]:!1}THREE.Object3D.call(this);b=void 0!==b?b:document;this.object=void 0;this.visible=!1;this.rotationSnap=
this.translationSnap=null;this.space="world";this.size=1;this.axis=null;var g=this,n="translate",r=!1,m={translate:new THREE.TransformGizmoTranslate,rotate:new THREE.TransformGizmoRotate,scale:new THREE.TransformGizmoScale},v;for(v in m){var h=m[v];h.visible=v===n;this.add(h)}var t={type:"change"},y={type:"mouseDown"},N={type:"mouseUp",mode:n},x={type:"objectChange"},E=new THREE.Raycaster,P=new THREE.Vector2,p=new THREE.Vector3,A=new THREE.Vector3,M=new THREE.Vector3,w=new THREE.Vector3,I=1,O=new THREE.Matrix4,
K=new THREE.Vector3,B=new THREE.Matrix4,C=new THREE.Vector3,D=new THREE.Quaternion,G=new THREE.Vector3(1,0,0),U=new THREE.Vector3(0,1,0),Q=new THREE.Vector3(0,0,1),J=new THREE.Quaternion,S=new THREE.Quaternion,W=new THREE.Quaternion,R=new THREE.Quaternion,Y=new THREE.Quaternion,ca=new THREE.Vector3,L=new THREE.Vector3,ea=new THREE.Matrix4,Z=new THREE.Matrix4,aa=new THREE.Vector3,T=new THREE.Vector3,fa=new THREE.Euler,z=new THREE.Matrix4,F=new THREE.Vector3,ga=new THREE.Euler;b.addEventListener("mousedown",
d,!1);b.addEventListener("touchstart",d,!1);b.addEventListener("mousemove",c,!1);b.addEventListener("touchmove",c,!1);b.addEventListener("mousemove",e,!1);b.addEventListener("touchmove",e,!1);b.addEventListener("mouseup",k,!1);b.addEventListener("mouseout",k,!1);b.addEventListener("touchend",k,!1);b.addEventListener("touchcancel",k,!1);b.addEventListener("touchleave",k,!1);this.dispose=function(){b.removeEventListener("mousedown",d);b.removeEventListener("touchstart",d);b.removeEventListener("mousemove",
c);b.removeEventListener("touchmove",c);b.removeEventListener("mousemove",e);b.removeEventListener("touchmove",e);b.removeEventListener("mouseup",k);b.removeEventListener("mouseout",k);b.removeEventListener("touchend",k);b.removeEventListener("touchcancel",k);b.removeEventListener("touchleave",k)};this.attach=function(a){this.object=a;this.visible=!0;this.update()};this.detach=function(){this.object=void 0;this.visible=!1;this.axis=null;TransformConstrolsHighlighted=!1};this.getMode=function(){return n};
this.setMode=function(a){n=a?a:n;"scale"===n&&(g.space="local");for(var b in m)m[b].visible=b===n;this.update();g.dispatchEvent(t)};this.setTranslationSnap=function(a){g.translationSnap=a};this.setRotationSnap=function(a){g.rotationSnap=a};this.setSize=function(a){g.size=a;this.update();g.dispatchEvent(t)};this.setSpace=function(a){g.space=a;this.update();g.dispatchEvent(t)};this.update=function(){void 0!==g.object&&null!==g.object&&(g.object.updateMatrixWorld(),T.setFromMatrixPosition(g.object.matrixWorld),
fa.setFromRotationMatrix(B.extractRotation(g.object.matrixWorld)),a.updateMatrixWorld(),F.setFromMatrixPosition(a.matrixWorld),ga.setFromRotationMatrix(B.extractRotation(a.matrixWorld)),I=T.distanceTo(F)/6*g.size,this.position.copy(T),this.scale.set(I,I,I),a instanceof THREE.PerspectiveCamera?K.copy(F).sub(T).normalize():a instanceof THREE.OrthographicCamera&&K.copy(F).normalize(),"local"===g.space?m[n].update(fa,K):"world"===g.space&&m[n].update(new THREE.Euler,K),m[n].highlight(g.axis))}};THREE.TransformControls.prototype=
Object.create(THREE.Object3D.prototype);THREE.TransformControls.prototype.constructor=THREE.TransformControls})();var Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{var a=document.createElement("canvas");return!(!window.WebGLRenderingContext||!a.getContext("webgl")&&!a.getContext("experimental-webgl"))}catch(b){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var a=document.createElement("div");a.id="webgl-error-message";a.style.fontFamily="monospace";a.style.fontSize="13px";a.style.fontWeight="normal";
a.style.textAlign="center";a.style.background="#fff";a.style.color="#000";a.style.padding="1.5em";a.style.width="400px";a.style.margin="5em auto 0";this.webgl||(a.innerHTML=window.WebGLRenderingContext?'Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.':'Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.');
return a},addGetWebGLMessage:function(a){var b,c;a=a||{};b=void 0!==a.parent?a.parent:document.body;a=void 0!==a.id?a.id:"oldie";c=Detector.getWebGLErrorMessage();c.id=a;b.appendChild(c)}};"object"===typeof module&&(module.exports=Detector);THREE.GeometryExporter=function(){};
THREE.GeometryExporter.prototype={constructor:THREE.GeometryExporter,parse:function(a){function b(a,b,c){return c?a|1<<b:a&~(1<<b)}function c(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==n[b])return n[b];n[b]=g.length/3;g.push(a.x,a.y,a.z);return n[b]}function e(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==m[b])return m[b];m[b]=r.length;r.push(a.getHex());return m[b]}function f(a){var b=a.x.toString()+a.y.toString();if(void 0!==h[b])return h[b];h[b]=v.length/
2;v.push(a.x,a.y);return h[b]}for(var d={metadata:{version:4,type:"geometry",generator:"GeometryExporter"}},l=[],k=0;k<a.vertices.length;k++){var q=a.vertices[k];l.push(q.x,q.y,q.z)}for(var q=[],g=[],n={},r=[],m={},v=[],h={},k=0;k<a.faces.length;k++){var t=a.faces[k],y=void 0!==a.faceVertexUvs[0][k],N=0<t.normal.length(),x=0<t.vertexNormals.length,E=1!==t.color.r||1!==t.color.g||1!==t.color.b,P=0<t.vertexColors.length,p=0,p=b(p,0,0),p=b(p,1,!1),p=b(p,2,!1),p=b(p,3,y),p=b(p,4,N),p=b(p,5,x),p=b(p,6,
E),p=b(p,7,P);q.push(p);q.push(t.a,t.b,t.c);y&&(y=a.faceVertexUvs[0][k],q.push(f(y[0]),f(y[1]),f(y[2])));N&&q.push(c(t.normal));x&&(N=t.vertexNormals,q.push(c(N[0]),c(N[1]),c(N[2])));E&&q.push(e(t.color));P&&(t=t.vertexColors,q.push(e(t[0]),e(t[1]),e(t[2])))}d.vertices=l;d.normals=g;0<r.length&&(d.colors=r);0<v.length&&(d.uvs=[v]);d.faces=q;return d}};THREE.MaterialExporter=function(){};
THREE.MaterialExporter.prototype={constructor:THREE.MaterialExporter,parse:function(a){var b={metadata:{version:4.2,type:"material",generator:"MaterialExporter"}};b.uuid=a.uuid;""!==a.name&&(b.name=a.name);if(a instanceof THREE.MeshBasicMaterial)b.type="MeshBasicMaterial",b.color=a.color.getHex(),a.vertexColors!==THREE.NoColors&&(b.vertexColors=a.vertexColors),a.blending!==THREE.NormalBlending&&(b.blending=a.blending),a.side!==THREE.FrontSide&&(b.side=a.side),b.opacity=a.opacity,b.transparent=a.transparent,
b.wireframe=a.wireframe;else if(a instanceof THREE.MeshLambertMaterial)b.type="MeshLambertMaterial",b.color=a.color.getHex(),b.ambient=a.ambient.getHex(),b.emissive=a.emissive.getHex(),a.vertexColors!==THREE.NoColors&&(b.vertexColors=a.vertexColors),a.blending!==THREE.NormalBlending&&(b.blending=a.blending),a.side!==THREE.FrontSide&&(b.side=a.side),b.opacity=a.opacity,b.transparent=a.transparent,b.wireframe=a.wireframe;else if(a instanceof THREE.MeshPhongMaterial)b.type="MeshPhongMaterial",b.color=
a.color.getHex(),b.ambient=a.ambient.getHex(),b.emissive=a.emissive.getHex(),b.specular=a.specular.getHex(),b.shininess=a.shininess,a.vertexColors!==THREE.NoColors&&(b.vertexColors=a.vertexColors),a.blending!==THREE.NormalBlending&&(b.blending=a.blending),a.side!==THREE.FrontSide&&(b.side=a.side),b.opacity=a.opacity,b.transparent=a.transparent,b.wireframe=a.wireframe;else if(a instanceof THREE.MeshNormalMaterial)b.type="MeshNormalMaterial",a.blending!==THREE.NormalBlending&&(b.blending=a.blending),
a.side!==THREE.FrontSide&&(b.side=a.side),b.opacity=a.opacity,b.transparent=a.transparent,b.wireframe=a.wireframe;else if(a instanceof THREE.MeshDepthMaterial)b.type="MeshDepthMaterial",a.blending!==THREE.NormalBlending&&(b.blending=a.blending),a.side!==THREE.FrontSide&&(b.side=a.side),b.opacity=a.opacity,b.transparent=a.transparent,b.wireframe=a.wireframe;else if(a instanceof THREE.MeshFaceMaterial){b.type="MeshFaceMaterial";b.materials=[];for(var c=0,e=a.materials.length;c<e;c++)b.materials.push(this.parse(a.materials[c]))}else a instanceof
THREE.ShaderMaterial?(b.type="ShaderMaterial",b.uniforms=a.uniforms,b.vertexShader=a.vertexShader,b.fragmentShader=a.fragmentShader):a instanceof THREE.SpriteMaterial&&(b.type="SpriteMaterial",b.color=a.color.getHex(),b.opacity=a.opacity,b.transparent=a.transparent);return b}};THREE.ObjectExporter=function(){};
THREE.ObjectExporter.prototype={constructor:THREE.ObjectExporter,parse:function(a){var b={metadata:{version:4.3,type:"Object",generator:"ObjectExporter"}},c={},e=new THREE.GeometryExporter,f=new THREE.BufferGeometryExporter,d=function(a){void 0===b.geometries&&(b.geometries=[]);if(void 0===c[a.uuid]){var d={};d.uuid=a.uuid;""!==a.name&&(d.name=a.name);var g=function(b){for(var c=0;c<b.length;c++){var e=b[c];void 0!==a.parameters[e]&&(d[e]=a.parameters[e])}};a instanceof THREE.PlaneGeometry?(d.type=
"PlaneGeometry",g(["width","height","widthSegments","heightSegments"])):a instanceof THREE.BoxGeometry?(d.type="BoxGeometry",g("width height depth widthSegments heightSegments depthSegments".split(" "))):a instanceof THREE.CircleGeometry?(d.type="CircleGeometry",g(["radius","segments"])):a instanceof THREE.CylinderGeometry?(d.type="CylinderGeometry",g("radiusTop radiusBottom height radialSegments heightSegments openEnded".split(" "))):a instanceof THREE.SphereGeometry?(d.type="SphereGeometry",g("radius widthSegments heightSegments phiStart phiLength thetaStart thetaLength".split(" "))):
a instanceof THREE.IcosahedronGeometry?(d.type="IcosahedronGeometry",g(["radius","detail"])):a instanceof THREE.TorusGeometry?(d.type="TorusGeometry",g(["radius","tube","radialSegments","tubularSegments","arc"])):a instanceof THREE.TorusKnotGeometry?(d.type="TorusKnotGeometry",g("radius tube radialSegments tubularSegments p q heightScale".split(" "))):a instanceof THREE.BufferGeometry?(d.type="BufferGeometry",d.data=f.parse(a),delete d.data.metadata):a instanceof THREE.Geometry&&(d.type="Geometry",
d.data=e.parse(a),delete d.data.metadata);c[a.uuid]=d;b.geometries.push(d)}return a.uuid},l={},k=new THREE.MaterialExporter,q=function(a){void 0===b.materials&&(b.materials=[]);if(void 0===l[a.uuid]){var c=k.parse(a);delete c.metadata;l[a.uuid]=c;b.materials.push(c)}return a.uuid},g=function(a){var b={};b.uuid=a.uuid;""!==a.name&&(b.name=a.name);"{}"!==JSON.stringify(a.userData)&&(b.userData=a.userData);!0!==a.visible&&(b.visible=a.visible);a instanceof THREE.Scene?b.type="Scene":a instanceof THREE.PerspectiveCamera?
(b.type="PerspectiveCamera",b.fov=a.fov,b.aspect=a.aspect,b.near=a.near,b.far=a.far):a instanceof THREE.OrthographicCamera?(b.type="OrthographicCamera",b.left=a.left,b.right=a.right,b.top=a.top,b.bottom=a.bottom,b.near=a.near,b.far=a.far):a instanceof THREE.AmbientLight?(b.type="AmbientLight",b.color=a.color.getHex()):a instanceof THREE.DirectionalLight?(b.type="DirectionalLight",b.color=a.color.getHex(),b.intensity=a.intensity):a instanceof THREE.PointLight?(b.type="PointLight",b.color=a.color.getHex(),
b.intensity=a.intensity,b.distance=a.distance):a instanceof THREE.SpotLight?(b.type="SpotLight",b.color=a.color.getHex(),b.intensity=a.intensity,b.distance=a.distance,b.angle=a.angle,b.exponent=a.exponent):a instanceof THREE.HemisphereLight?(b.type="HemisphereLight",b.color=a.color.getHex(),b.groundColor=a.groundColor.getHex()):a instanceof THREE.Mesh?(b.type="Mesh",b.geometry=d(a.geometry),b.material=q(a.material)):a instanceof THREE.Sprite?(b.type="Sprite",b.material=q(a.material)):b.type="Object3D";
b.matrix=a.matrix.toArray();if(0<a.children.length){b.children=[];for(var c=0;c<a.children.length;c++)b.children.push(g(a.children[c]))}return b};b.object=g(a);return b}};THREE.OBJExporter=function(){};
THREE.OBJExporter.prototype={constructor:THREE.OBJExporter,parse:function(a){var b="",c=0,e=0,f=0;a.traverse(function(a){if(a instanceof THREE.Mesh){var d=0,k=0,q=0,g=a.geometry;if(g instanceof THREE.Geometry){b+="o "+a.name+"\n";for(var n=g.vertices,r=0,m=n.length;r<m;r++){var v=n[r].clone();v.applyMatrix4(a.matrixWorld);b+="v "+v.x+" "+v.y+" "+v.z+"\n";d++}var n=g.faces,h=g.faceVertexUvs[0];if(g=n.length===h.length)for(r=0,m=h.length;r<m;r++)for(var t=h[r],v=0,y=t.length;v<y;v++){var N=t[v];b+=
"vt "+N.x+" "+N.y+"\n";k++}h=new THREE.Matrix3;h.getNormalMatrix(a.matrixWorld);r=0;for(m=n.length;r<m;r++)if(y=n[r],a=y.vertexNormals,3===a.length)for(v=0,y=a.length;v<y;v++)t=a[v].clone(),t.applyMatrix3(h),b+="vn "+t.x+" "+t.y+" "+t.z+"\n",q++;else for(t=y.normal.clone(),t.applyMatrix3(h),v=0;3>v;v++)b+="vn "+t.x+" "+t.y+" "+t.z+"\n",q++;r=0;v=1;for(m=n.length;r<m;r++,v+=3)y=n[r],b+="f ",b+=c+y.a+1+"/"+(g?e+v:"")+"/"+(f+v)+" ",b+=c+y.b+1+"/"+(g?e+v+1:"")+"/"+(f+v+1)+" ",b+=c+y.c+1+"/"+(g?e+v+2:
"")+"/"+(f+v+2)+"\n"}else console.warn("THREE.OBJExporter.parseMesh(): geometry type unsupported",a);c+=d;e+=k;f+=q}});return b}};THREE.TypedGeometryExporter=function(){};THREE.TypedGeometryExporter.prototype={constructor:THREE.TypedGeometryExporter,parse:function(a){var b={metadata:{version:4,type:"TypedGeometry",generator:"TypedGeometryExporter"}},c=["vertices","normals","uvs"],e;for(e in c){for(var f=c[e],d=a[f],l=[],k=0,q=d.length;k<q;k++)l[k]=d[k];b[f]=l}a=a.boundingSphere;null!==a&&(b.boundingSphere={center:a.center.toArray(),radius:a.radius});return b}};THREE.MTLLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
Object.assign(THREE.MTLLoader.prototype,THREE.EventDispatcher.prototype,{load:function(a,b,c,e){var f=this,d=new THREE.FileLoader(this.manager);d.setPath(this.path);d.load(a,function(a){b(f.parse(a))},c,e)},setPath:function(a){this.path=a},setTexturePath:function(a){this.texturePath=a},setBaseUrl:function(a){console.warn("THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead.");this.setTexturePath(a)},setCrossOrigin:function(a){this.crossOrigin=
a},setMaterialOptions:function(a){this.materialOptions=a},parse:function(a){var b=a.split("\n"),c={},e=/\s+/;a={};for(var f=0;f<b.length;f++){var d=b[f],d=d.trim();if(0!==d.length&&"#"!==d.charAt(0)){var l=d.indexOf(" "),k=0<=l?d.substring(0,l):d,k=k.toLowerCase(),d=0<=l?d.substring(l+1):"",d=d.trim();"newmtl"===k?(c={name:d},a[d]=c):c&&("ka"===k||"kd"===k||"ks"===k?(d=d.split(e,3),c[k]=[parseFloat(d[0]),parseFloat(d[1]),parseFloat(d[2])]):c[k]=d)}}b=new THREE.MTLLoader.MaterialCreator(this.texturePath||
this.path,this.materialOptions);b.setCrossOrigin(this.crossOrigin);b.setManager(this.manager);b.setMaterials(a);return b}});THREE.MTLLoader.MaterialCreator=function(a,b){this.baseUrl=a||"";this.options=b;this.materialsInfo={};this.materials={};this.materialsArray=[];this.nameLookup={};this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide;this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping};
THREE.MTLLoader.MaterialCreator.prototype={constructor:THREE.MTLLoader.MaterialCreator,setCrossOrigin:function(a){this.crossOrigin=a},setManager:function(a){this.manager=a},setMaterials:function(a){this.materialsInfo=this.convert(a);this.materials={};this.materialsArray=[];this.nameLookup={}},convert:function(a){if(!this.options)return a;var b={},c;for(c in a){var e=a[c],f={};b[c]=f;for(var d in e){var l=!0,k=e[d],q=d.toLowerCase();switch(q){case "kd":case "ka":case "ks":this.options&&this.options.normalizeRGB&&
(k=[k[0]/255,k[1]/255,k[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===k[0]&&0===k[1]&&0===k[2]&&(l=!1)}l&&(f[q]=k)}}return b},preload:function(){for(var a in this.materialsInfo)this.create(a)},getIndex:function(a){return this.nameLookup[a]},getAsArray:function(){var a=0,b;for(b in this.materialsInfo)this.materialsArray[a]=this.create(b),this.nameLookup[b]=a,a++;return this.materialsArray},create:function(a){void 0===this.materials[a]&&this.createMaterial_(a);return this.materials[a]},createMaterial_:function(a){function b(a,
b){if(!f[a]){var e=c.getTextureParams(b,f),g=c.loadTexture(d(c.baseUrl,e.url));g.repeat.copy(e.scale);g.offset.copy(e.offset);g.wrapS=c.wrap;g.wrapT=c.wrap;f[a]=g}}var c=this,e=this.materialsInfo[a],f={name:a,side:this.side},d=function(a,b){return"string"!==typeof b||""===b?"":/^https?:\/\//i.test(b)?b:a+b},l;for(l in e){var k=e[l];if(""!==k)switch(l.toLowerCase()){case "kd":f.color=(new THREE.Color).fromArray(k);break;case "ks":f.specular=(new THREE.Color).fromArray(k);break;case "map_kd":b("map",
k);break;case "map_ks":b("specularMap",k);break;case "map_bump":case "bump":b("bumpMap",k);break;case "ns":f.shininess=parseFloat(k);break;case "d":1>k&&(f.opacity=k,f.transparent=!0);break;case "Tr":0<k&&(f.opacity=1-k,f.transparent=!0)}}this.materials[a]=new THREE.MeshPhongMaterial(f);return this.materials[a]},getTextureParams:function(a,b){var c={scale:new THREE.Vector2(1,1),offset:new THREE.Vector2(0,0)},e=a.split(/\s+/),f;f=e.indexOf("-bm");0<=f&&(b.bumpScale=parseFloat(e[f+1]),e.splice(f,2));
f=e.indexOf("-s");0<=f&&(c.scale.set(parseFloat(e[f+1]),parseFloat(e[f+2])),e.splice(f,4));f=e.indexOf("-o");0<=f&&(c.offset.set(parseFloat(e[f+1]),parseFloat(e[f+2])),e.splice(f,4));c.url=e.join(" ").trim();return c},loadTexture:function(a,b,c,e,f){var d=THREE.Loader.Handlers.get(a),l=void 0!==this.manager?this.manager:THREE.DefaultLoadingManager;null===d&&(d=new THREE.TextureLoader(l));d.setCrossOrigin&&d.setCrossOrigin(this.crossOrigin);a=d.load(a,c,e,f);void 0!==b&&(a.mapping=b);return a}};THREE.OBJLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.materials=null;this.regexp={vertex_pattern:/^v\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,normal_pattern:/^vn\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,uv_pattern:/^vt\s+([\d|\.|\+|\-|e|E]+)\s+([\d|\.|\+|\-|e|E]+)/,face_vertex:/^f\s+(-?\d+)\s+(-?\d+)\s+(-?\d+)(?:\s+(-?\d+))?/,face_vertex_uv:/^f\s+(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)(?:\s+(-?\d+)\/(-?\d+))?/,
face_vertex_uv_normal:/^f\s+(-?\d+)\/(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\/(-?\d+)\s+(-?\d+)\/(-?\d+)\/(-?\d+)(?:\s+(-?\d+)\/(-?\d+)\/(-?\d+))?/,face_vertex_normal:/^f\s+(-?\d+)\/\/(-?\d+)\s+(-?\d+)\/\/(-?\d+)\s+(-?\d+)\/\/(-?\d+)(?:\s+(-?\d+)\/\/(-?\d+))?/,object_pattern:/^[og]\s*(.+)?/,smoothing_pattern:/^s\s+(\d+|on|off)/,material_library_pattern:/^mtllib /,material_use_pattern:/^usemtl /}};
THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(a,b,c,e){var f=this,d=new THREE.FileLoader(f.manager);d.setPath(this.path);d.load(a,function(a){b(f.parse(a))},c,e)},setPath:function(a){this.path=a},setMaterials:function(a){this.materials=a},_createParserState:function(){var a={objects:[],object:{},vertices:[],normals:[],uvs:[],materialLibraries:[],startObject:function(a,c){if(this.object&&!1===this.object.fromDeclaration)this.object.name=a,this.object.fromDeclaration=!1!==c;else{var b=
this.object&&"function"===typeof this.object.currentMaterial?this.object.currentMaterial():void 0;this.object&&"function"===typeof this.object._finalize&&this.object._finalize(!0);this.object={name:a||"",fromDeclaration:!1!==c,geometry:{vertices:[],normals:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(a,b){var c=this._finalize(!1);c&&(c.inherited||0>=c.groupCount)&&this.materials.splice(c.index,1);c={index:this.materials.length,name:a||"",mtllib:Array.isArray(b)&&0<b.length?b[b.length-
1]:"",smooth:void 0!==c?c.smooth:this.smooth,groupStart:void 0!==c?c.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(a){a={index:"number"===typeof a?a:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};a.clone=this.clone.bind(a);return a}};this.materials.push(c);return c},currentMaterial:function(){if(0<this.materials.length)return this.materials[this.materials.length-1]},_finalize:function(a){var b=this.currentMaterial();
b&&-1===b.groupEnd&&(b.groupEnd=this.geometry.vertices.length/3,b.groupCount=b.groupEnd-b.groupStart,b.inherited=!1);if(a&&1<this.materials.length)for(var c=this.materials.length-1;0<=c;c--)0>=this.materials[c].groupCount&&this.materials.splice(c,1);a&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth});return b}};b&&b.name&&"function"===typeof b.clone&&(b=b.clone(0),b.inherited=!0,this.object.materials.push(b));this.objects.push(this.object)}},finalize:function(){this.object&&
"function"===typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(a,c){var b=parseInt(a,10);return 3*(0<=b?b-1:b+c/3)},parseNormalIndex:function(a,c){var b=parseInt(a,10);return 3*(0<=b?b-1:b+c/3)},parseUVIndex:function(a,c){var b=parseInt(a,10);return 2*(0<=b?b-1:b+c/2)},addVertex:function(a,c,e){var b=this.vertices,d=this.object.geometry.vertices;d.push(b[a+0]);d.push(b[a+1]);d.push(b[a+2]);d.push(b[c+0]);d.push(b[c+1]);d.push(b[c+2]);d.push(b[e+0]);d.push(b[e+1]);
d.push(b[e+2])},addVertexLine:function(a){var b=this.vertices,e=this.object.geometry.vertices;e.push(b[a+0]);e.push(b[a+1]);e.push(b[a+2])},addNormal:function(a,c,e){var b=this.normals,d=this.object.geometry.normals;d.push(b[a+0]);d.push(b[a+1]);d.push(b[a+2]);d.push(b[c+0]);d.push(b[c+1]);d.push(b[c+2]);d.push(b[e+0]);d.push(b[e+1]);d.push(b[e+2])},addUV:function(a,c,e){var b=this.uvs,d=this.object.geometry.uvs;d.push(b[a+0]);d.push(b[a+1]);d.push(b[c+0]);d.push(b[c+1]);d.push(b[e+0]);d.push(b[e+
1])},addUVLine:function(a){var b=this.uvs,e=this.object.geometry.uvs;e.push(b[a+0]);e.push(b[a+1])},addFace:function(a,c,e,f,d,l,k,q,g,n,r,m){var b=this.vertices.length;a=this.parseVertexIndex(a,b);c=this.parseVertexIndex(c,b);e=this.parseVertexIndex(e,b);void 0===f?this.addVertex(a,c,e):(b=this.parseVertexIndex(f,b),this.addVertex(a,c,b),this.addVertex(c,e,b));void 0!==d&&(b=this.uvs.length,a=this.parseUVIndex(d,b),c=this.parseUVIndex(l,b),e=this.parseUVIndex(k,b),void 0===f?this.addUV(a,c,e):(b=
this.parseUVIndex(q,b),this.addUV(a,c,b),this.addUV(c,e,b)));void 0!==g&&(d=this.normals.length,a=this.parseNormalIndex(g,d),c=g===n?a:this.parseNormalIndex(n,d),e=g===r?a:this.parseNormalIndex(r,d),void 0===f?this.addNormal(a,c,e):(b=this.parseNormalIndex(m,d),this.addNormal(a,c,b),this.addNormal(c,e,b)))},addLineGeometry:function(a,c){this.object.geometry.type="Line";for(var b=this.vertices.length,f=this.uvs.length,d=0,l=a.length;d<l;d++)this.addVertexLine(this.parseVertexIndex(a[d],b));b=0;for(l=
c.length;b<l;b++)this.addUVLine(this.parseUVIndex(c[b],f))}};a.startObject("",!1);return a},parse:function(a){console.time("OBJLoader");var b=this._createParserState();-1!==a.indexOf("\r\n")&&(a=a.replace(/\r\n/g,"\n"));-1!==a.indexOf("\\\n")&&(a=a.replace(/\\\n/g,""));var c=a.split("\n"),e,f,d=[],l="function"===typeof"".trimLeft;a=0;for(var k=c.length;a<k;a++)if(e=c[a],e=l?e.trimLeft():e.trim(),f=e.length,0!==f&&(f=e.charAt(0),"#"!==f))if("v"===f)if(f=e.charAt(1)," "===f&&null!==(d=this.regexp.vertex_pattern.exec(e)))b.vertices.push(parseFloat(d[1]),
parseFloat(d[2]),parseFloat(d[3]));else if("n"===f&&null!==(d=this.regexp.normal_pattern.exec(e)))b.normals.push(parseFloat(d[1]),parseFloat(d[2]),parseFloat(d[3]));else if("t"===f&&null!==(d=this.regexp.uv_pattern.exec(e)))b.uvs.push(parseFloat(d[1]),parseFloat(d[2]));else throw Error("Unexpected vertex/normal/uv line: '"+e+"'");else if("f"===f)if(null!==(d=this.regexp.face_vertex_uv_normal.exec(e)))b.addFace(d[1],d[4],d[7],d[10],d[2],d[5],d[8],d[11],d[3],d[6],d[9],d[12]);else if(null!==(d=this.regexp.face_vertex_uv.exec(e)))b.addFace(d[1],
d[3],d[5],d[7],d[2],d[4],d[6],d[8]);else if(null!==(d=this.regexp.face_vertex_normal.exec(e)))b.addFace(d[1],d[3],d[5],d[7],void 0,void 0,void 0,void 0,d[2],d[4],d[6],d[8]);else if(null!==(d=this.regexp.face_vertex.exec(e)))b.addFace(d[1],d[2],d[3],d[4]);else throw Error("Unexpected face line: '"+e+"'");else if("l"===f){f=e.substring(1).trim().split(" ");var q=[],g=[];if(-1===e.indexOf("/"))q=f;else{e=0;for(var n=f.length;e<n;e++){var r=f[e].split("/");""!==r[0]&&q.push(r[0]);""!==r[1]&&g.push(r[1])}}b.addLineGeometry(q,
g)}else if(null!==(d=this.regexp.object_pattern.exec(e)))e=(" "+d[0].substr(1).trim()).substr(1),b.startObject(e);else if(this.regexp.material_use_pattern.test(e))b.object.startMaterial(e.substring(7).trim(),b.materialLibraries);else if(this.regexp.material_library_pattern.test(e))b.materialLibraries.push(e.substring(7).trim());else if(null!==(d=this.regexp.smoothing_pattern.exec(e))){if(e=d[1].trim().toLowerCase(),b.object.smooth="1"===e||"on"===e,e=b.object.currentMaterial())e.smooth=b.object.smooth}else if("\x00"!==
e)throw Error("Unexpected line: '"+e+"'");b.finalize();c=new THREE.Group;c.materialLibraries=[].concat(b.materialLibraries);a=0;for(k=b.objects.length;a<k;a++)if(d=b.objects[a],e=d.geometry,q=d.materials,l="Line"===e.type,0!==e.vertices.length){f=new THREE.BufferGeometry;f.addAttribute("position",new THREE.BufferAttribute(new Float32Array(e.vertices),3));0<e.normals.length?f.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(e.normals),3)):f.computeVertexNormals();0<e.uvs.length&&f.addAttribute("uv",
new THREE.BufferAttribute(new Float32Array(e.uvs),2));g=[];n=0;for(r=q.length;n<r;n++){var m=q[n];e=void 0;if(null!==this.materials&&(e=this.materials.create(m.name),l&&e&&!(e instanceof THREE.LineBasicMaterial))){var v=new THREE.LineBasicMaterial;v.copy(e);e=v}e||(e=l?new THREE.LineBasicMaterial:new THREE.MeshPhongMaterial,e.name=m.name);e.shading=m.smooth?THREE.SmoothShading:THREE.FlatShading;g.push(e)}if(1<g.length){n=0;for(r=q.length;n<r;n++)m=q[n],f.addGroup(m.groupStart,m.groupCount,n);e=new THREE.MultiMaterial(g);
l=l?new THREE.LineSegments(f,e):new THREE.Mesh(f,e)}else l=l?new THREE.LineSegments(f,g[0]):new THREE.Mesh(f,g[0]);l.name=d.name;c.add(l)}console.timeEnd("OBJLoader");return c}};THREE.RenderableObject=function(){this.id=0;this.object=null;this.renderOrder=this.z=0};
THREE.RenderableFace=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.normalModel=new THREE.Vector3;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.color=new THREE.Color;this.material=null;this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2];this.renderOrder=this.z=0};
THREE.RenderableVertex=function(){this.position=new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.renderOrder=this.z=0};
THREE.RenderableSprite=function(){this.id=0;this.object=null;this.rotation=this.z=this.y=this.x=0;this.scale=new THREE.Vector2;this.material=null;this.renderOrder=0};
THREE.Projector=function(){function a(){if(r===v){var a=new THREE.RenderableVertex;m.push(a);v++;r++;return a}return m[r++]}function b(){if(t===N){var a=new THREE.RenderableFace;y.push(a);N++;t++;return a}return y[t++]}function c(){if(E===p){var a=new THREE.RenderableLine;P.push(a);p++;E++;return a}return P[E++]}function e(){if(M===I){var a=new THREE.RenderableSprite;w.push(a);I++;M++;return a}return w[M++]}function f(a,b){return a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?
b.z-a.z:a.id!==b.id?a.id-b.id:0}function d(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,h=-a.z+a.w,g=-b.z+b.w;if(0<=e&&0<=f&&0<=h&&0<=g)return!0;if(0>e&&0>f||0>h&&0>g)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>h?c=Math.max(c,h/(h-g)):0>g&&(d=Math.min(d,h/(h-g)));if(d<c)return!1;a.lerp(b,c);b.lerp(a,1-d);return!0}var l,k,q=[],g=0,n,r,m=[],v=0,h,t,y=[],N=0,x,E,P=[],p=0,A,M,w=[],I=0,O={objects:[],lights:[],elements:[]},K=new THREE.Vector3,B=new THREE.Vector4,C=new THREE.Box3(new THREE.Vector3(-1,
-1,-1),new THREE.Vector3(1,1,1)),D=new THREE.Box3,G=Array(3),U=new THREE.Matrix4,Q=new THREE.Matrix4,J,S=new THREE.Matrix4,W=new THREE.Matrix3,R=new THREE.Frustum,Y=new THREE.Vector4,ca=new THREE.Vector4;this.projectVector=function(a,b){console.warn("THREE.Projector: .projectVector() is now vector.project().");a.project(b)};this.unprojectVector=function(a,b){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");a.unproject(b)};this.pickingRay=function(a,b){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")};
var L=new function(){function d(a){var b=a.positionWorld,c=a.positionScreen;b.copy(a.position).applyMatrix4(J);c.copy(b).applyMatrix4(Q);b=1/c.w;c.x*=b;c.y*=b;c.z*=b;a.visible=-1<=c.x&&1>=c.x&&-1<=c.y&&1>=c.y&&-1<=c.z&&1>=c.z}function e(a,b,c){if(!0===a.visible||!0===b.visible||!0===c.visible)return!0;G[0]=a.positionScreen;G[1]=b.positionScreen;G[2]=c.positionScreen;return C.intersectsBox(D.setFromPoints(G))}function f(a,b,c){return 0>(c.positionScreen.x-a.positionScreen.x)*(b.positionScreen.y-a.positionScreen.y)-
(c.positionScreen.y-a.positionScreen.y)*(b.positionScreen.x-a.positionScreen.x)}var g=[],l=[],k=null,p=null,r=new THREE.Matrix3;return{setObject:function(a){k=a;p=k.material;r.getNormalMatrix(k.matrixWorld);g.length=0;l.length=0},projectVertex:d,checkTriangleVisibility:e,checkBackfaceCulling:f,pushVertex:function(b,c,e){n=a();n.position.set(b,c,e);d(n)},pushNormal:function(a,b,c){g.push(a,b,c)},pushUv:function(a,b){l.push(a,b)},pushLine:function(a,b){var d=m[a],e=m[b];x=c();x.id=k.id;x.v1.copy(d);
x.v2.copy(e);x.z=(d.positionScreen.z+e.positionScreen.z)/2;x.renderOrder=k.renderOrder;x.material=k.material;O.elements.push(x)},pushTriangle:function(a,c,d){var q=m[a],n=m[c],t=m[d];if(!1!==e(q,n,t)&&(p.side===THREE.DoubleSide||!0===f(q,n,t))){h=b();h.id=k.id;h.v1.copy(q);h.v2.copy(n);h.v3.copy(t);h.z=(q.positionScreen.z+n.positionScreen.z+t.positionScreen.z)/3;h.renderOrder=k.renderOrder;h.normalModel.fromArray(g,3*a);h.normalModel.applyMatrix3(r).normalize();for(q=0;3>q;q++)n=h.vertexNormalsModel[q],
n.fromArray(g,3*arguments[q]),n.applyMatrix3(r).normalize(),h.uvs[q].fromArray(l,2*arguments[q]);h.vertexNormalsLength=3;h.material=k.material;O.elements.push(h)}}}};this.projectScene=function(n,p,v,C){function D(a){if(k===g){var b=new THREE.RenderableObject;q.push(b);g++;k++;l=b}else l=q[k++];l.id=a.id;l.object=a;K.setFromMatrixPosition(a.matrixWorld);K.applyProjection(Q);l.z=K.z;l.renderOrder=a.renderOrder;O.objects.push(l)}M=E=t=0;O.elements.length=0;!0===n.autoUpdate&&n.updateMatrixWorld();null===
p.parent&&p.updateMatrixWorld();U.copy(p.matrixWorldInverse.getInverse(p.matrixWorld));Q.multiplyMatrices(p.projectionMatrix,U);R.setFromMatrix(Q);k=0;O.objects.length=0;O.lights.length=0;n.traverseVisible(function(a){a instanceof THREE.Light?O.lights.push(a):a instanceof THREE.Mesh||a instanceof THREE.Line?!1===a.material.visible||!0===a.frustumCulled&&!1===R.intersectsObject(a)||D(a):a instanceof THREE.Sprite&&!1!==a.material.visible&&(!0!==a.frustumCulled||!1!==R.intersectsSprite(a))&&D(a)});!0===
v&&O.objects.sort(f);n=0;for(v=O.objects.length;n<v;n++){var z=O.objects[n].object,F=z.geometry;L.setObject(z);J=z.matrixWorld;r=0;if(z instanceof THREE.Mesh)if(F instanceof THREE.BufferGeometry){var y=F.attributes,z=F.groups;if(void 0!==y.position){for(var H=y.position.array,u=0,w=H.length;u<w;u+=3)L.pushVertex(H[u],H[u+1],H[u+2]);if(void 0!==y.normal)for(var N=y.normal.array,u=0,w=N.length;u<w;u+=3)L.pushNormal(N[u],N[u+1],N[u+2]);if(void 0!==y.uv)for(y=y.uv.array,u=0,w=y.length;u<w;u+=2)L.pushUv(y[u],
y[u+1]);if(null!==F.index)if(H=F.index.array,0<z.length)for(n=0;n<z.length;n++)for(w=z[n],u=w.start,w=w.start+w.count;u<w;u+=3)L.pushTriangle(H[u],H[u+1],H[u+2]);else for(u=0,w=H.length;u<w;u+=3)L.pushTriangle(H[u],H[u+1],H[u+2]);else for(u=0,w=H.length/3;u<w;u+=3)L.pushTriangle(u,u+1,u+2)}}else{if(F instanceof THREE.Geometry){var I=F.vertices,u=F.faces,w=F.faceVertexUvs[0];W.getNormalMatrix(J);for(var H=z.material,y=H instanceof THREE.MultiMaterial,N=!0===y?z.material:null,G=0,P=I.length;G<P;G++){var ba=
I[G];K.copy(ba);if(!0===H.morphTargets)for(var T=F.morphTargets,X=z.morphTargetInfluences,V=0,Z=T.length;V<Z;V++){var da=X[V];if(0!==da){var aa=T[V].vertices[G];K.x+=(aa.x-ba.x)*da;K.y+=(aa.y-ba.y)*da;K.z+=(aa.z-ba.z)*da}}L.pushVertex(K.x,K.y,K.z)}I=0;for(G=u.length;I<G;I++)if(P=u[I],H=!0===y?N.materials[P.materialIndex]:z.material,void 0!==H&&(X=H.side,F=m[P.a],ba=m[P.b],T=m[P.c],!1!==L.checkTriangleVisibility(F,ba,T))){V=L.checkBackfaceCulling(F,ba,T);if(X!==THREE.DoubleSide){if(X===THREE.FrontSide&&
!1===V)continue;if(X===THREE.BackSide&&!0===V)continue}h=b();h.id=z.id;h.v1.copy(F);h.v2.copy(ba);h.v3.copy(T);h.normalModel.copy(P.normal);!1!==V||X!==THREE.BackSide&&X!==THREE.DoubleSide||h.normalModel.negate();h.normalModel.applyMatrix3(W).normalize();Z=P.vertexNormals;da=0;for(aa=Math.min(Z.length,3);da<aa;da++){var ea=h.vertexNormalsModel[da];ea.copy(Z[da]);!1!==V||X!==THREE.BackSide&&X!==THREE.DoubleSide||ea.negate();ea.applyMatrix3(W).normalize()}h.vertexNormalsLength=Z.length;X=w[I];if(void 0!==
X)for(V=0;3>V;V++)h.uvs[V].copy(X[V]);h.color=P.color;h.material=H;h.z=(F.positionScreen.z+ba.positionScreen.z+T.positionScreen.z)/3;h.renderOrder=z.renderOrder;O.elements.push(h)}}}else if(z instanceof THREE.Line)if(F instanceof THREE.BufferGeometry){if(y=F.attributes,void 0!==y.position){H=y.position.array;u=0;for(w=H.length;u<w;u+=3)L.pushVertex(H[u],H[u+1],H[u+2]);if(null!==F.index)for(H=F.index.array,u=0,w=H.length;u<w;u+=2)L.pushLine(H[u],H[u+1]);else for(y=z instanceof THREE.LineSegments?2:
1,u=0,w=H.length/3-1;u<w;u+=y)L.pushLine(u,u+1)}}else{if(F instanceof THREE.Geometry&&(S.multiplyMatrices(Q,J),I=z.geometry.vertices,0!==I.length))for(F=a(),F.positionScreen.copy(I[0]).applyMatrix4(S),y=z instanceof THREE.LineSegments?2:1,G=1,P=I.length;G<P;G++)F=a(),F.positionScreen.copy(I[G]).applyMatrix4(S),0<(G+1)%y||(ba=m[r-2],Y.copy(F.positionScreen),ca.copy(ba.positionScreen),!0===d(Y,ca)&&(Y.multiplyScalar(1/Y.w),ca.multiplyScalar(1/ca.w),x=c(),x.id=z.id,x.v1.positionScreen.copy(Y),x.v2.positionScreen.copy(ca),
x.z=Math.max(Y.z,ca.z),x.renderOrder=z.renderOrder,x.material=z.material,z.material.vertexColors===THREE.VertexColors&&(x.vertexColors[0].copy(z.geometry.colors[G]),x.vertexColors[1].copy(z.geometry.colors[G-1])),O.elements.push(x)))}else z instanceof THREE.Sprite&&(B.set(J.elements[12],J.elements[13],J.elements[14],1),B.applyMatrix4(Q),u=1/B.w,B.z*=u,-1<=B.z&&1>=B.z&&(A=e(),A.id=z.id,A.x=B.x*u,A.y=B.y*u,A.z=B.z,A.renderOrder=z.renderOrder,A.object=z,A.rotation=z.rotation,A.scale.x=z.scale.x*Math.abs(A.x-
(B.x+p.projectionMatrix.elements[0])/(B.w+p.projectionMatrix.elements[12])),A.scale.y=z.scale.y*Math.abs(A.y-(B.y+p.projectionMatrix.elements[5])/(B.w+p.projectionMatrix.elements[13])),A.material=z.material,O.elements.push(A)))}!0===C&&O.elements.sort(f);return O}};THREE.BrightnessContrastShader={uniforms:{tDiffuse:{type:"t",value:null},brightness:{type:"f",value:0},contrast:{type:"f",value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float brightness;\nuniform float contrast;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\ngl_FragColor.rgb += brightness;\nif (contrast > 0.0) {\ngl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\n} else {\ngl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\n}\n}"};THREE.CopyShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"};THREE.EffectComposer=function(a,b){this.renderer=a;if(void 0===b){var c={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1},e=a.getSize();b=new THREE.WebGLRenderTarget(e.width,e.height,c)}this.renderTarget1=b;this.renderTarget2=b.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.passes=[];void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader");this.copyPass=new THREE.ShaderPass(THREE.CopyShader)};
Object.assign(THREE.EffectComposer.prototype,{swapBuffers:function(){var a=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=a},addPass:function(a){this.passes.push(a);var b=this.renderer.getSize();a.setSize(b.width,b.height)},insertPass:function(a,b){this.passes.splice(b,0,a)},render:function(a){var b=!1,c,e,f=this.passes.length;for(e=0;e<f;e++)if(c=this.passes[e],!1!==c.enabled){c.render(this.renderer,this.writeBuffer,this.readBuffer,a,b);if(c.needsSwap){if(b){var d=this.renderer.context;
d.stencilFunc(d.NOTEQUAL,1,4294967295);this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,a);d.stencilFunc(d.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==THREE.MaskPass&&(c instanceof THREE.MaskPass?b=!0:c instanceof THREE.ClearMaskPass&&(b=!1))}},reset:function(a){if(void 0===a){var b=this.renderer.getSize();a=this.renderTarget1.clone();a.setSize(b.width,b.height)}this.renderTarget1.dispose();this.renderTarget2.dispose();this.renderTarget1=a;this.renderTarget2=a.clone();this.writeBuffer=
this.renderTarget1;this.readBuffer=this.renderTarget2},setSize:function(a,b){this.renderTarget1.setSize(a,b);this.renderTarget2.setSize(a,b);for(var c=0;c<this.passes.length;c++)this.passes[c].setSize(a,b)}});THREE.Pass=function(){this.needsSwap=this.enabled=!0;this.renderToScreen=this.clear=!1};Object.assign(THREE.Pass.prototype,{setSize:function(a,b){},render:function(a,b,c,e,f){console.error("THREE.Pass: .render() must be implemented in derived pass.")}});THREE.FXAAShader={uniforms:{tDiffuse:{value:null},resolution:{value:new THREE.Vector2(1/1024,1/512)}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec2 resolution;\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_REDUCE_MUL   (1.0/8.0)\n#define FXAA_SPAN_MAX     8.0\nvoid main() {\nvec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\nvec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\nvec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\nvec3 rgbM  = rgbaM.xyz;\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat lumaNW = dot( rgbNW, luma );\nfloat lumaNE = dot( rgbNE, luma );\nfloat lumaSW = dot( rgbSW, luma );\nfloat lumaSE = dot( rgbSE, luma );\nfloat lumaM  = dot( rgbM,  luma );\nfloat lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\nfloat lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\nvec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\nfloat rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\ndir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\nmax( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\ndir * rcpDirMin)) * resolution;\nvec4 rgbA = (1.0/2.0) * (\ntexture2D(tDiffuse,  gl_FragCoord.xy  * resolution + dir * (1.0/3.0 - 0.5)) +\ntexture2D(tDiffuse,  gl_FragCoord.xy  * resolution + dir * (2.0/3.0 - 0.5)));\nvec4 rgbB = rgbA * (1.0/2.0) + (1.0/4.0) * (\ntexture2D(tDiffuse,  gl_FragCoord.xy  * resolution + dir * (0.0/3.0 - 0.5)) +\ntexture2D(tDiffuse,  gl_FragCoord.xy  * resolution + dir * (3.0/3.0 - 0.5)));\nfloat lumaB = dot(rgbB, vec4(luma, 0.0));\nif ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\ngl_FragColor = rgbA;\n} else {\ngl_FragColor = rgbB;\n}\n}"};THREE.MaskPass=function(a,b){THREE.Pass.call(this);this.scene=a;this.camera=b;this.clear=!0;this.inverse=this.needsSwap=!1};
THREE.MaskPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.MaskPass,render:function(a,b,c,e,f){e=a.context;f=a.state;f.buffers.color.setMask(!1);f.buffers.depth.setMask(!1);f.buffers.color.setLocked(!0);f.buffers.depth.setLocked(!0);var d,l;this.inverse?(d=0,l=1):(d=1,l=0);f.buffers.stencil.setTest(!0);f.buffers.stencil.setOp(e.REPLACE,e.REPLACE,e.REPLACE);f.buffers.stencil.setFunc(e.ALWAYS,d,4294967295);f.buffers.stencil.setClear(l);a.render(this.scene,this.camera,
c,this.clear);a.render(this.scene,this.camera,b,this.clear);f.buffers.color.setLocked(!1);f.buffers.depth.setLocked(!1);f.buffers.stencil.setFunc(e.EQUAL,1,4294967295);f.buffers.stencil.setOp(e.KEEP,e.KEEP,e.KEEP)}});THREE.ClearMaskPass=function(){THREE.Pass.call(this);this.needsSwap=!1};THREE.ClearMaskPass.prototype=Object.create(THREE.Pass.prototype);Object.assign(THREE.ClearMaskPass.prototype,{render:function(a,b,c,e,f){a.state.buffers.stencil.setTest(!1)}});THREE.ShaderLib.mirror={uniforms:{mirrorColor:new THREE.Uniform(new THREE.Color(8355711)),mirrorSampler:new THREE.Uniform(null),textureMatrix:new THREE.Uniform(new THREE.Matrix4)},vertexShader:"uniform mat4 textureMatrix;\nvarying vec4 mirrorCoord;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nmirrorCoord = textureMatrix * worldPosition;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform vec3 mirrorColor;\nuniform sampler2D mirrorSampler;\nvarying vec4 mirrorCoord;\nfloat blendOverlay(float base, float blend) {\nreturn( base < 0.5 ? ( 2.0 * base * blend ) : (1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\n}\nvoid main() {\nvec4 color = texture2DProj(mirrorSampler, mirrorCoord);\ncolor = vec4(blendOverlay(mirrorColor.r, color.r), blendOverlay(mirrorColor.g, color.g), blendOverlay(mirrorColor.b, color.b), 1.0);\ngl_FragColor = color;\n}"};
THREE.Mirror=function(a,b,c){THREE.Object3D.call(this);this.name="mirror_"+this.id;c=c||{};this.matrixNeedsUpdate=!0;var e=void 0!==c.textureWidth?c.textureWidth:512,f=void 0!==c.textureHeight?c.textureHeight:512;this.clipBias=void 0!==c.clipBias?c.clipBias:0;var d=void 0!==c.color?new THREE.Color(c.color):new THREE.Color(8355711);this.renderer=a;this.mirrorPlane=new THREE.Plane;this.normal=new THREE.Vector3(0,0,1);this.mirrorWorldPosition=new THREE.Vector3;this.cameraWorldPosition=new THREE.Vector3;
this.rotationMatrix=new THREE.Matrix4;this.lookAtPosition=new THREE.Vector3(0,0,-1);this.clipPlane=new THREE.Vector4;void 0!==c.debugMode&&c.debugMode&&(a=new THREE.ArrowHelper(new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,0),10,16777088),c=new THREE.Geometry,c.vertices.push(new THREE.Vector3(-10,-10,0)),c.vertices.push(new THREE.Vector3(10,-10,0)),c.vertices.push(new THREE.Vector3(10,10,0)),c.vertices.push(new THREE.Vector3(-10,10,0)),c.vertices.push(c.vertices[0]),c=new THREE.Line(c,new THREE.LineBasicMaterial({color:16777088})),
this.add(a),this.add(c));b instanceof THREE.PerspectiveCamera?this.camera=b:(this.camera=new THREE.PerspectiveCamera,console.log(this.name+": camera is not a Perspective Camera!"));this.textureMatrix=new THREE.Matrix4;this.mirrorCamera=this.camera.clone();this.mirrorCamera.matrixAutoUpdate=!0;b={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1};this.renderTarget=new THREE.WebGLRenderTarget(e,f,b);this.renderTarget2=new THREE.WebGLRenderTarget(e,f,b);
b=THREE.ShaderLib.mirror;a=Object.assign({},b.uniforms);this.material=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a});this.material.uniforms.mirrorSampler=new THREE.Uniform(this.renderTarget.texture);this.material.uniforms.mirrorColor=new THREE.Uniform(d);this.material.uniforms.textureMatrix=new THREE.Uniform(this.textureMatrix);THREE.Math.isPowerOfTwo(e)&&THREE.Math.isPowerOfTwo(f)||(this.renderTarget.texture.generateMipmaps=!1,this.renderTarget2.texture.generateMipmaps=
!1);this.updateTextureMatrix();this.render()};THREE.Mirror.prototype=Object.create(THREE.Object3D.prototype);THREE.Mirror.prototype.constructor=THREE.Mirror;THREE.Mirror.prototype.renderWithMirror=function(a){this.updateTextureMatrix();this.matrixNeedsUpdate=!1;var b=a.camera;a.camera=this.mirrorCamera;a.renderTemp();a.material.uniforms.mirrorSampler.value=a.renderTarget2.texture;this.render();this.matrixNeedsUpdate=!0;a.material.uniforms.mirrorSampler.value=a.renderTarget.texture;a.camera=b;a.updateTextureMatrix()};
THREE.Mirror.prototype.updateTextureMatrix=function(){this.updateMatrixWorld();this.camera.updateMatrixWorld();this.mirrorWorldPosition.setFromMatrixPosition(this.matrixWorld);this.cameraWorldPosition.setFromMatrixPosition(this.camera.matrixWorld);this.rotationMatrix.extractRotation(this.matrixWorld);this.normal.set(0,0,1);this.normal.applyMatrix4(this.rotationMatrix);var a=this.mirrorWorldPosition.clone().sub(this.cameraWorldPosition);a.reflect(this.normal).negate();a.add(this.mirrorWorldPosition);
this.rotationMatrix.extractRotation(this.camera.matrixWorld);this.lookAtPosition.set(0,0,-1);this.lookAtPosition.applyMatrix4(this.rotationMatrix);this.lookAtPosition.add(this.cameraWorldPosition);var b=this.mirrorWorldPosition.clone().sub(this.lookAtPosition);b.reflect(this.normal).negate();b.add(this.mirrorWorldPosition);this.up.set(0,-1,0);this.up.applyMatrix4(this.rotationMatrix);this.up.reflect(this.normal).negate();this.mirrorCamera.position.copy(a);this.mirrorCamera.up=this.up;this.mirrorCamera.lookAt(b);
this.mirrorCamera.updateProjectionMatrix();this.mirrorCamera.updateMatrixWorld();this.mirrorCamera.matrixWorldInverse.getInverse(this.mirrorCamera.matrixWorld);this.textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);this.textureMatrix.multiply(this.mirrorCamera.projectionMatrix);this.textureMatrix.multiply(this.mirrorCamera.matrixWorldInverse);this.mirrorPlane.setFromNormalAndCoplanarPoint(this.normal,this.mirrorWorldPosition);this.mirrorPlane.applyMatrix4(this.mirrorCamera.matrixWorldInverse);
this.clipPlane.set(this.mirrorPlane.normal.x,this.mirrorPlane.normal.y,this.mirrorPlane.normal.z,this.mirrorPlane.constant);b=new THREE.Vector4;a=this.mirrorCamera.projectionMatrix;b.x=(Math.sign(this.clipPlane.x)+a.elements[8])/a.elements[0];b.y=(Math.sign(this.clipPlane.y)+a.elements[9])/a.elements[5];b.z=-1;b.w=(1+a.elements[10])/a.elements[14];new THREE.Vector4;b=this.clipPlane.multiplyScalar(2/this.clipPlane.dot(b));a.elements[2]=b.x;a.elements[6]=b.y;a.elements[10]=b.z+1-this.clipBias;a.elements[14]=
b.w};THREE.Mirror.prototype.render=function(){this.matrixNeedsUpdate&&this.updateTextureMatrix();this.matrixNeedsUpdate=!0;for(var a=this;null!==a.parent;)a=a.parent;if(void 0!==a&&a instanceof THREE.Scene){var b=this.material.visible;this.material.visible=!1;this.renderer.render(a,this.mirrorCamera,this.renderTarget,!0);this.material.visible=b}};
THREE.Mirror.prototype.renderTemp=function(){this.matrixNeedsUpdate&&this.updateTextureMatrix();this.matrixNeedsUpdate=!0;for(var a=this;null!==a.parent;)a=a.parent;void 0!==a&&a instanceof THREE.Scene&&this.renderer.render(a,this.mirrorCamera,this.renderTarget2,!0)};THREE.MirrorShader={uniforms:{tDiffuse:{value:null},side:{value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform int side;\nvarying vec2 vUv;\nvoid main() {\nvec2 p = vUv;\nif (side == 0){\nif (p.x > 0.5) p.x = 1.0 - p.x;\n}else if (side == 1){\nif (p.x < 0.5) p.x = 1.0 - p.x;\n}else if (side == 2){\nif (p.y < 0.5) p.y = 1.0 - p.y;\n}else if (side == 3){\nif (p.y > 0.5) p.y = 1.0 - p.y;\n} \nvec4 color = texture2D(tDiffuse, p);\ngl_FragColor = color;\n}"};THREE.RenderPass=function(a,b,c,e,f){THREE.Pass.call(this);this.scene=a;this.camera=b;this.overrideMaterial=c;this.clearColor=e;this.clearAlpha=void 0!==f?f:0;this.clear=!0;this.needsSwap=this.clearDepth=!1};
THREE.RenderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.RenderPass,render:function(a,b,c,e,f){b=a.autoClear;a.autoClear=!1;this.scene.overrideMaterial=this.overrideMaterial;var d,l;this.clearColor&&(d=a.getClearColor().getHex(),l=a.getClearAlpha(),a.setClearColor(this.clearColor,this.clearAlpha));this.clearDepth&&a.clearDepth();a.render(this.scene,this.camera,this.renderToScreen?null:c,this.clear);this.clearColor&&a.setClearColor(d,l);this.scene.overrideMaterial=
null;a.autoClear=b}});THREE.ShaderGodRays={godrays_generate:{uniforms:{tInput:{type:"t",value:null},fStepSize:{type:"f",value:1},vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(.5,.5)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#define TAPS_PER_PASS 6.0\nvarying vec2 vUv;\nuniform sampler2D tInput;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize;\nvoid main() {\nvec2 delta = vSunPositionScreenSpace - vUv;\nfloat dist = length( delta );\nvec2 stepv = fStepSize * delta / dist;\nfloat iters = dist/fStepSize;\nvec2 uv = vUv.xy;\nfloat col = 0.0;\nif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\ngl_FragColor = vec4( col/TAPS_PER_PASS );\ngl_FragColor.a = 1.0;\n}"},
godrays_combine:{uniforms:{tColors:{type:"t",value:null},tGodRays:{type:"t",value:null},fGodRayIntensity:{type:"f",value:.69},vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(.5,.5)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\nvoid main() {\ngl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\ngl_FragColor.a = 1.0;\n}"},
godrays_fake_sun:{uniforms:{vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(.5,.5)},fAspect:{type:"f",value:1},sunColor:{type:"c",value:new THREE.Color(16772608)},bgColor:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\nuniform vec3 sunColor;\nuniform vec3 bgColor;\nvoid main() {\nvec2 diff = vUv - vSunPositionScreenSpace;\ndiff.x *= fAspect;\nfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\nprop = 0.35 * pow( 1.0 - prop, 3.0 );\ngl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\ngl_FragColor.w = 1.0;\n}"}};var SPE=SPE||{};
SPE.utils={randomVector3:function(a,b){var c=new THREE.Vector3;return c.copy(a),c.x+=Math.random()*b.x-b.x/2,c.y+=Math.random()*b.y-b.y/2,c.z+=Math.random()*b.z-b.z/2,c},randomColor:function(a,b){var c=new THREE.Color;return c.copy(a),c.r+=Math.random()*b.x-b.x/2,c.g+=Math.random()*b.y-b.y/2,c.b+=Math.random()*b.z-b.z/2,c.r=Math.max(0,Math.min(c.r,1)),c.g=Math.max(0,Math.min(c.g,1)),c.b=Math.max(0,Math.min(c.b,1)),c},randomFloat:function(a,b){return a+b*(Math.random()-.5)},randomVector3OnSphere:function(a,b,
c,e,f){var d=2*Math.random()-1,l=6.2832*Math.random(),k=Math.sqrt(1-d*d),d=new THREE.Vector3(k*Math.cos(l),k*Math.sin(l),d);b=this._randomFloat(b,c);return f&&(b=Math.round(b/f)*f),d.multiplyScalar(b),e&&d.multiply(e),d.add(a),d},randomVector3OnDisk:function(a,b,c,e,f){var d=6.2832*Math.random();b=this._randomFloat(b,c);f&&(b=Math.round(b/f)*f);f=(new THREE.Vector3(Math.cos(d),Math.sin(d),0)).multiplyScalar(b);return e&&f.multiply(e),f.add(a),f},randomVelocityVector3OnSphere:function(a,b,c,e,f){a=
(new THREE.Vector3).subVectors(a,b);return a.normalize().multiplyScalar(Math.abs(this._randomFloat(c,e))),f&&a.multiply(f),a},randomizeExistingVector3:function(a,b,c){a.copy(b);a.x+=Math.random()*c.x-c.x/2;a.y+=Math.random()*c.y-c.y/2;a.z+=Math.random()*c.z-c.z/2},randomizeExistingColor:function(a,b,c){a.copy(b);a.r+=Math.random()*c.x-c.x/2;a.g+=Math.random()*c.y-c.y/2;a.b+=Math.random()*c.z-c.z/2;a.r=Math.max(0,Math.min(a.r,1));a.g=Math.max(0,Math.min(a.g,1));a.b=Math.max(0,Math.min(a.b,1))},randomizeExistingVector3OnSphere:function(a,
b,c,e,f,d){var l=2*Math.random()-1,k=6.2832*Math.random(),q=Math.sqrt(1-l*l);c=this._randomFloat(c,e);d&&(c=Math.round(c/d)*d);a.set(q*Math.cos(k)*c,q*Math.sin(k)*c,l*c).multiply(f);a.add(b)},randomizeExistingVector3OnDisk:function(a,b,c,e,f,d){var l=6.2832*Math.random();c=Math.abs(this._randomFloat(c,e));d&&(c=Math.round(c/d)*d);a.set(Math.cos(l),Math.sin(l),0).multiplyScalar(c);f&&a.multiply(f);a.add(b)},randomizeExistingVelocityVector3OnSphere:function(a,b,c,e,f){a.copy(c).sub(b).normalize().multiplyScalar(Math.abs(this._randomFloat(e,
f)))},generateID:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0;return("x"===a?b:3&b|8).toString(16)})}};SPE=SPE||{};
SPE.Group=function(a){this.fixedTimeStep=parseFloat("number"==typeof a.fixedTimeStep?a.fixedTimeStep:.016);this.maxAge=parseFloat(a.maxAge||3);this.texture=a.texture||null;this.hasPerspective=parseInt("number"==typeof a.hasPerspective?a.hasPerspective:1,10);this.colorize=parseInt("number"==typeof a.colorize?a.colorize:1,10);this.blending="number"==typeof a.blending?a.blending:THREE.AdditiveBlending;this.transparent="number"==typeof a.transparent?a.transparent:1;this.alphaTest="number"==typeof a.alphaTest?
a.alphaTest:.5;this.depthWrite=a.depthWrite||!1;this.depthTest=a.depthTest||!0;this.uniforms={duration:{type:"f",value:this.maxAge},texture:{type:"t",value:this.texture},hasPerspective:{type:"i",value:this.hasPerspective},colorize:{type:"i",value:this.colorize}};this.attributes={acceleration:{type:"v3",value:[]},velocity:{type:"v3",value:[]},alive:{type:"f",value:[]},age:{type:"f",value:[]},size:{type:"v3",value:[]},angle:{type:"v4",value:[]},colorStart:{type:"c",value:[]},colorMiddle:{type:"c",value:[]},
colorEnd:{type:"c",value:[]},opacity:{type:"v3",value:[]}};this.emitters=[];this._pool=[];this._poolCreationSettings=null;this._createNewWhenPoolEmpty=0;this.maxAgeMilliseconds=1E3*this.maxAge;this.geometry=new THREE.Geometry;this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,attributes:this.attributes,vertexShader:SPE.shaders.vertex,fragmentShader:SPE.shaders.fragment,blending:this.blending,transparent:this.transparent,alphaTest:this.alphaTest,depthWrite:this.depthWrite,depthTest:this.depthTest});
this.mesh=new THREE.PointCloud(this.geometry,this.material);this.mesh.dynamic=!0};
SPE.Group.prototype={_flagUpdate:function(){return this.attributes.age.needsUpdate=!0,this.attributes.alive.needsUpdate=!0,this.attributes.angle.needsUpdate=!0,this.attributes.velocity.needsUpdate=!0,this.attributes.acceleration.needsUpdate=!0,this.geometry.verticesNeedUpdate=!0,this},addEmitter:function(a){a.particlesPerSecond=a.duration?a.particleCount/(this.maxAge<a.duration?this.maxAge:a.duration)|0:a.particleCount/this.maxAge|0;var b=this.geometry.vertices,c=b.length,e=a.particleCount+c,f=this.attributes,
d=f.acceleration.value,l=f.velocity.value,k=f.alive.value,q=f.age.value,g=f.size.value,n=f.angle.value,r=f.colorStart.value,m=f.colorMiddle.value,v=f.colorEnd.value,h=f.opacity.value;a.particleIndex=parseFloat(c);for(var t=c;e>t;++t)"sphere"===a.type?(b[t]=this._randomVector3OnSphere(a.position,a.radius,a.radiusSpread,a.radiusScale,a.radiusSpreadClamp),l[t]=this._randomVelocityVector3OnSphere(b[t],a.position,a.speed,a.speedSpread)):"disk"===a.type?(b[t]=this._randomVector3OnDisk(a.position,a.radius,
a.radiusSpread,a.radiusScale,a.radiusSpreadClamp),l[t]=this._randomVelocityVector3OnSphere(b[t],a.position,a.speed,a.speedSpread)):(b[t]=this._randomVector3(a.position,a.positionSpread),l[t]=this._randomVector3(a.velocity,a.velocitySpread)),d[t]=this._randomVector3(a.acceleration,a.accelerationSpread),g[t]=new THREE.Vector3(Math.abs(this._randomFloat(a.sizeStart,a.sizeStartSpread)),Math.abs(this._randomFloat(a.sizeMiddle,a.sizeMiddleSpread)),Math.abs(this._randomFloat(a.sizeEnd,a.sizeEndSpread))),
n[t]=new THREE.Vector4(this._randomFloat(a.angleStart,a.angleStartSpread),this._randomFloat(a.angleMiddle,a.angleMiddleSpread),this._randomFloat(a.angleEnd,a.angleEndSpread),a.angleAlignVelocity?1:0),q[t]=0,k[t]=a.isStatic?1:0,r[t]=this._randomColor(a.colorStart,a.colorStartSpread),m[t]=this._randomColor(a.colorMiddle,a.colorMiddleSpread),v[t]=this._randomColor(a.colorEnd,a.colorEndSpread),h[t]=new THREE.Vector3(Math.abs(this._randomFloat(a.opacityStart,a.opacityStartSpread)),Math.abs(this._randomFloat(a.opacityMiddle,
a.opacityMiddleSpread)),Math.abs(this._randomFloat(a.opacityEnd,a.opacityEndSpread)));return a.verticesIndex=parseFloat(c),a.attributes=f,a.vertices=this.geometry.vertices,a.maxAge=this.maxAge,a.__id=this._generateID(),a.isStatic||this.emitters.push(a),this},removeEmitter:function(a){var b=this.emitters;if(a instanceof SPE.Emitter)a=a.__id;else if("string"!=typeof a)return void console.warn("Invalid emitter or emitter ID passed to SPE.Group#removeEmitter.");for(var c=0,e=b.length;e>c;++c)if(b[c].__id===
a){b.splice(c,1);break}},tick:function(a){var b=this.emitters,c=b.length;if(a=a||this.fixedTimeStep,0!==c){for(var e=0;c>e;++e)b[e].tick(a);return this._flagUpdate(),this}},getFromPool:function(){var a=this._pool,b=this._createNewWhenPoolEmpty;return a.length?a.pop():b?new SPE.Emitter(this._poolCreationSettings):null},releaseIntoPool:function(a){return a instanceof SPE.Emitter?(a.reset(),this._pool.unshift(a),this):void console.error("Will not add non-emitter to particle group pool:",a)},getPool:function(){return this._pool},
addPool:function(a,b,c){this._poolCreationSettings=b;this._createNewWhenPoolEmpty=!!c;for(var e=0;a>e;++e)c=new SPE.Emitter(b),this.addEmitter(c),this.releaseIntoPool(c);return this},_triggerSingleEmitter:function(a){var b=this,c=b.getFromPool();return null===c?void console.log("SPE.Group pool ran out."):(a&&c.position.copy(a),c.enable(),setTimeout(function(){c.disable();b.releaseIntoPool(c)},b.maxAgeMilliseconds),b)},triggerPoolEmitter:function(a,b){if("number"==typeof a&&1<a)for(var c=0;a>c;++c)this._triggerSingleEmitter(b);
else this._triggerSingleEmitter(b);return this}};for(var i in SPE.utils)SPE.Group.prototype["_"+i]=SPE.utils[i];
SPE.shaders={vertex:"uniform float duration;\nuniform int hasPerspective;\nattribute vec3 colorStart;\nattribute vec3 colorMiddle;\nattribute vec3 colorEnd;\nattribute vec3 opacity;\nattribute vec3 acceleration;\nattribute vec3 velocity;\nattribute float alive;\nattribute float age;\nattribute vec3 size;\nattribute vec4 angle;\nvarying vec4 vColor;\nvarying float vAngle;\nvec4 GetPos() {\nvec3 newPos = vec3( position );\nvec3 a = acceleration * age;\nvec3 v = velocity * age;\nv = v + (a * age);\nnewPos = newPos + v;\nvec4 mvPosition = modelViewMatrix * vec4( newPos, 1.0 );\nreturn mvPosition;\n}\nvoid main() {\nfloat positionInTime = (age / duration);\nfloat lerpAmount1 = (age / (0.5 * duration));\nfloat lerpAmount2 = ((age - 0.5 * duration) / (0.5 * duration));\nfloat halfDuration = duration / 2.0;\nfloat pointSize = 0.0;\nvAngle = 0.0;\nif( alive > 0.5 ) {\nif( positionInTime < 0.5 ) {\nvColor = vec4( mix(colorStart, colorMiddle, lerpAmount1), mix(opacity.x, opacity.y, lerpAmount1) );\n}\nelse {\nvColor = vec4( mix(colorMiddle, colorEnd, lerpAmount2), mix(opacity.y, opacity.z, lerpAmount2) );\n}\nvec4 pos = GetPos();\nif( angle[3] == 1.0 ) {\nvAngle = -atan(pos.y, pos.x);\n}\nelse if( positionInTime < 0.5 ) {\nvAngle = mix( angle.x, angle.y, lerpAmount1 );\n}\nelse {\nvAngle = mix( angle.y, angle.z, lerpAmount2 );\n}\nif( positionInTime < 0.5) {\npointSize = mix( size.x, size.y, lerpAmount1 );\n}\nelse {\npointSize = mix( size.y, size.z, lerpAmount2 );\n}\nif( hasPerspective == 1 ) {\npointSize = pointSize * ( 300.0 / length( pos.xyz ) );\n}\ngl_PointSize = pointSize;\ngl_Position = projectionMatrix * pos;\n}\nelse {\nvColor = vec4( 0.0, 0.0, 0.0, 0.0 );\ngl_Position = vec4(1000000000.0, 1000000000.0, 1000000000.0, 0.0);\n}\n}",fragment:"uniform sampler2D texture;\nuniform int colorize;\nvarying vec4 vColor;\nvarying float vAngle;\nvoid main() {\nfloat c = cos(vAngle);\nfloat s = sin(vAngle);\nvec2 rotatedUV = vec2(c * (gl_PointCoord.x - 0.5) + s * (gl_PointCoord.y - 0.5) + 0.5,\nc * (gl_PointCoord.y - 0.5) - s * (gl_PointCoord.x - 0.5) + 0.5);\nvec4 rotatedTexture = texture2D( texture, rotatedUV );\nif( colorize == 1 ) {\ngl_FragColor = vColor * rotatedTexture;\n}\nelse {\ngl_FragColor = rotatedTexture;\n}\n}"};
SPE=SPE||{};
SPE.Emitter=function(a){a=a||{};this.particleCount="number"==typeof a.particleCount?a.particleCount:100;this.type="cube"===a.type||"sphere"===a.type||"disk"===a.type?a.type:"cube";this.position=a.position instanceof THREE.Vector3?a.position:new THREE.Vector3;this.positionSpread=a.positionSpread instanceof THREE.Vector3?a.positionSpread:new THREE.Vector3;this.radius="number"==typeof a.radius?a.radius:10;this.radiusSpread="number"==typeof a.radiusSpread?a.radiusSpread:0;this.radiusScale=a.radiusScale instanceof
THREE.Vector3?a.radiusScale:new THREE.Vector3(1,1,1);this.radiusSpreadClamp="number"==typeof a.radiusSpreadClamp?a.radiusSpreadClamp:0;this.acceleration=a.acceleration instanceof THREE.Vector3?a.acceleration:new THREE.Vector3;this.accelerationSpread=a.accelerationSpread instanceof THREE.Vector3?a.accelerationSpread:new THREE.Vector3;this.velocity=a.velocity instanceof THREE.Vector3?a.velocity:new THREE.Vector3;this.velocitySpread=a.velocitySpread instanceof THREE.Vector3?a.velocitySpread:new THREE.Vector3;
this.speed=parseFloat("number"==typeof a.speed?a.speed:0);this.speedSpread=parseFloat("number"==typeof a.speedSpread?a.speedSpread:0);this.sizeStart=parseFloat("number"==typeof a.sizeStart?a.sizeStart:1);this.sizeStartSpread=parseFloat("number"==typeof a.sizeStartSpread?a.sizeStartSpread:0);this.sizeEnd=parseFloat("number"==typeof a.sizeEnd?a.sizeEnd:this.sizeStart);this.sizeEndSpread=parseFloat("number"==typeof a.sizeEndSpread?a.sizeEndSpread:0);this.sizeMiddle=parseFloat("undefined"!=typeof a.sizeMiddle?
a.sizeMiddle:Math.abs(this.sizeEnd+this.sizeStart)/2);this.sizeMiddleSpread=parseFloat("number"==typeof a.sizeMiddleSpread?a.sizeMiddleSpread:0);this.angleStart=parseFloat("number"==typeof a.angleStart?a.angleStart:0);this.angleStartSpread=parseFloat("number"==typeof a.angleStartSpread?a.angleStartSpread:0);this.angleEnd=parseFloat("number"==typeof a.angleEnd?a.angleEnd:0);this.angleEndSpread=parseFloat("number"==typeof a.angleEndSpread?a.angleEndSpread:0);this.angleMiddle=parseFloat("undefined"!=
typeof a.angleMiddle?a.angleMiddle:Math.abs(this.angleEnd+this.angleStart)/2);this.angleMiddleSpread=parseFloat("number"==typeof a.angleMiddleSpread?a.angleMiddleSpread:0);this.angleAlignVelocity=a.angleAlignVelocity||!1;this.colorStart=a.colorStart instanceof THREE.Color?a.colorStart:new THREE.Color("white");this.colorStartSpread=a.colorStartSpread instanceof THREE.Vector3?a.colorStartSpread:new THREE.Vector3;this.colorEnd=a.colorEnd instanceof THREE.Color?a.colorEnd:this.colorStart.clone();this.colorEndSpread=
a.colorEndSpread instanceof THREE.Vector3?a.colorEndSpread:new THREE.Vector3;this.colorMiddle=a.colorMiddle instanceof THREE.Color?a.colorMiddle:(new THREE.Color).addColors(this.colorStart,this.colorEnd).multiplyScalar(.5);this.colorMiddleSpread=a.colorMiddleSpread instanceof THREE.Vector3?a.colorMiddleSpread:new THREE.Vector3;this.opacityStart=parseFloat("undefined"!=typeof a.opacityStart?a.opacityStart:1);this.opacityStartSpread=parseFloat("undefined"!=typeof a.opacityStartSpread?a.opacityStartSpread:
0);this.opacityEnd=parseFloat("number"==typeof a.opacityEnd?a.opacityEnd:0);this.opacityEndSpread=parseFloat("undefined"!=typeof a.opacityEndSpread?a.opacityEndSpread:0);this.opacityMiddle=parseFloat("undefined"!=typeof a.opacityMiddle?a.opacityMiddle:Math.abs(this.opacityEnd+this.opacityStart)/2);this.opacityMiddleSpread=parseFloat("number"==typeof a.opacityMiddleSpread?a.opacityMiddleSpread:0);this.duration="number"==typeof a.duration?a.duration:null;this.alive=parseFloat("number"==typeof a.alive?
a.alive:1);this.isStatic="number"==typeof a.isStatic?a.isStatic:0;this.particlesPerSecond=0;this.vertices=this.attributes=null;this.particleIndex=this.maxAge=this.age=this.verticesIndex=0;this.__id=null;this.userData={}};
SPE.Emitter.prototype={_resetParticle:function(a){var b=this.type,c=this.positionSpread,e=this.vertices[a],f=this.attributes.velocity.value[a],d=this.velocitySpread,l=this.accelerationSpread;"cube"===b&&0===c.x&&0===c.y&&0===c.z||"sphere"===b&&0===this.radius||"disk"===b&&0===this.radius?(e.copy(this.position),this._randomizeExistingVector3(f,this.velocity,d),"cube"===b&&this._randomizeExistingVector3(this.attributes.acceleration.value[a],this.acceleration,l)):"cube"===b?(this._randomizeExistingVector3(e,
this.position,c),this._randomizeExistingVector3(f,this.velocity,d),this._randomizeExistingVector3(this.attributes.acceleration.value[a],this.acceleration,l)):"sphere"===b?(this._randomizeExistingVector3OnSphere(e,this.position,this.radius,this.radiusSpread,this.radiusScale,this.radiusSpreadClamp),this._randomizeExistingVelocityVector3OnSphere(f,this.position,e,this.speed,this.speedSpread)):"disk"===b&&(this._randomizeExistingVector3OnDisk(e,this.position,this.radius,this.radiusSpread,this.radiusScale,
this.radiusSpreadClamp),this._randomizeExistingVelocityVector3OnSphere(f,this.position,e,this.speed,this.speedSpread))},tick:function(a){if(!this.isStatic){for(var b=this.attributes,c=b.alive.value,b=b.age.value,e=this.verticesIndex,f=this.particleCount,d=e+f,l=this.particlesPerSecond*this.alive*a,k=this.maxAge,q=this.age,g=this.duration,n=this.particleIndex,r=e;d>r;++r)1===c[r]&&(b[r]+=a),b[r]>=k&&(b[r]=0,c[r]=0);if(0===this.alive)return void(this.age=0);if("number"==typeof g&&q>g)return this.alive=
0,void(this.age=0);d=Math.max(Math.min(d,n+l),0);k=g=0;for(r=q=0|n;d>r;++r)1!==c[r]&&++g;if(0!==g)for(g=a/g,r=q;d>r;++r,++k)1!==c[r]&&(c[r]=1,b[r]=g*k,this._resetParticle(r));this.particleIndex+=l;0>this.particleIndex&&(this.particleIndex=0);n>=e+f&&(this.particleIndex=parseFloat(e));this.age+=a;0>this.age&&(this.age=0)}},reset:function(a){if(this.age=0,this.alive=0,a){a=this.verticesIndex+this.particleCount;for(var b=this.attributes,c=b.alive.value,b=b.age.value,e=this.verticesIndex;a>e;++e)c[e]=
0,b[e]=0}return this},enable:function(){this.alive=1},disable:function(){this.alive=0}};for(i in SPE.utils)SPE.Emitter.prototype["_"+i]=SPE.utils[i];THREE.ShaderPass=function(a,b){THREE.Pass.call(this);this.textureID=void 0!==b?b:"tDiffuse";a instanceof THREE.ShaderMaterial?(this.uniforms=a.uniforms,this.material=a):a&&(this.uniforms=Object.assign({},a.uniforms),this.material=new THREE.ShaderMaterial({defines:a.defines||{},uniforms:this.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}));this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.scene=new THREE.Scene;this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,
2),null);this.scene.add(this.quad)};THREE.ShaderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.ShaderPass,render:function(a,b,c,e,f){this.uniforms[this.textureID]&&(this.uniforms[this.textureID]=new THREE.Uniform(c.texture));this.quad.material=this.material;this.renderToScreen?a.render(this.scene,this.camera):a.render(this.scene,this.camera,b,this.clear)}});THREE.ShaderLib.sky={uniforms:{luminance:{value:1},turbidity:{value:2},rayleigh:{value:1},mieCoefficient:{value:.005},mieDirectionalG:{value:.8},sunPosition:{value:new THREE.Vector3}},vertexShader:"uniform vec3 sunPosition;\nuniform float rayleigh;\nuniform float turbidity;\nuniform float mieCoefficient;\nvarying vec3 vWorldPosition;\nvarying vec3 vSunDirection;\nvarying float vSunfade;\nvarying vec3 vBetaR;\nvarying vec3 vBetaM;\nvarying float vSunE;\nconst vec3 up = vec3(0.0, 1.0, 0.0);\nconst float e = 2.71828182845904523536028747135266249775724709369995957;\nconst float pi = 3.141592653589793238462643383279502884197169;\nconst float v = 4.0;\nconst vec3 K = vec3(0.686, 0.678, 0.666);\nconst vec3 simplifiedRayleigh = 0.0005 / vec3(94, 40, 18);\nconst vec3 lambda = vec3(680E-9, 550E-9, 450E-9);\nconst float cutoffAngle = pi/1.95;\nconst float steepness = 1.5;\nconst float EE = 1000.0;\nfloat sunIntensity(float zenithAngleCos)\n{\nzenithAngleCos = clamp(zenithAngleCos, -1.0, 1.0);\nreturn EE * max(0.0, 1.0 - pow(e, -((cutoffAngle - acos(zenithAngleCos))/steepness)));\n}\nvec3 totalMie(vec3 lambda, float T)\n{\nfloat c = (0.2 * T ) * 10E-18;\nreturn 0.434 * c * pi * pow((2.0 * pi) / lambda, vec3(v - 2.0)) * K;\n}\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvSunDirection = normalize(sunPosition);\nvSunE = sunIntensity(dot(vSunDirection, up));\nvSunfade = 1.0-clamp(1.0-exp((sunPosition.y/450000.0)),0.0,1.0);\nfloat rayleighCoefficient = rayleigh - (1.0 * (1.0-vSunfade));\nvBetaR = simplifiedRayleigh * rayleighCoefficient;\nvBetaM = totalMie(lambda, turbidity) * mieCoefficient;\n}",
fragmentShader:"varying vec3 vWorldPosition;\nvarying vec3 vSunDirection;\nvarying float vSunfade;\nvarying vec3 vBetaR;\nvarying vec3 vBetaM;\nvarying float vSunE;\nuniform float luminance;\nuniform float mieDirectionalG;\nconst vec3 cameraPos = vec3(0., 0., 0.);\nconst float pi = 3.141592653589793238462643383279502884197169;\nconst float n = 1.0003;\nconst float N = 2.545E25;\nconst float rayleighZenithLength = 8.4E3;\nconst float mieZenithLength = 1.25E3;\nconst vec3 up = vec3(0.0, 1.0, 0.0);\nconst float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;\nfloat rayleighPhase(float cosTheta)\n{\nreturn (3.0 / (16.0*pi)) * (1.0 + pow(cosTheta, 2.0));\n}\nfloat hgPhase(float cosTheta, float g)\n{\nreturn (1.0 / (4.0*pi)) * ((1.0 - pow(g, 2.0)) / pow(1.0 - 2.0*g*cosTheta + pow(g, 2.0), 1.5));\n}\nconst float A = 0.15;\nconst float B = 0.50;\nconst float C = 0.10;\nconst float D = 0.20;\nconst float E = 0.02;\nconst float F = 0.30;\nconst float whiteScale = 1.0748724675633854;\nvec3 Uncharted2Tonemap(vec3 x)\n{\nreturn ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\n}\nvoid main() \n{\nfloat zenithAngle = acos(max(0.0, dot(up, normalize(vWorldPosition - cameraPos))));\nfloat sR = rayleighZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));\nfloat sM = mieZenithLength / (cos(zenithAngle) + 0.15 * pow(93.885 - ((zenithAngle * 180.0) / pi), -1.253));\nvec3 Fex = exp(-(vBetaR * sR + vBetaM * sM));\nfloat cosTheta = dot(normalize(vWorldPosition - cameraPos), vSunDirection);\nfloat rPhase = rayleighPhase(cosTheta*0.5+0.5);\nvec3 betaRTheta = vBetaR * rPhase;\nfloat mPhase = hgPhase(cosTheta, mieDirectionalG);\nvec3 betaMTheta = vBetaM * mPhase;\nvec3 Lin = pow(vSunE * ((betaRTheta + betaMTheta) / (vBetaR + vBetaM)) * (1.0 - Fex),vec3(1.5));\nLin *= mix(vec3(1.0),pow(vSunE * ((betaRTheta + betaMTheta) / (vBetaR + vBetaM)) * Fex,vec3(1.0/2.0)),clamp(pow(1.0-dot(up, vSunDirection),5.0),0.0,1.0));\nvec3 direction = normalize(vWorldPosition - cameraPos);\nfloat theta = acos(direction.y); // elevation --\x3e y-axis, [-pi/2, pi/2]\nfloat phi = atan(direction.z, direction.x); // azimuth --\x3e x-axis [-pi/2, pi/2]\nvec2 uv = vec2(phi, theta) / vec2(2.0*pi, pi) + vec2(0.5, 0.0);\nvec3 L0 = vec3(0.1) * Fex;\nfloat sundisk = smoothstep(sunAngularDiameterCos,sunAngularDiameterCos+0.00002,cosTheta);\nL0 += (vSunE * 19000.0 * Fex)*sundisk;\nvec3 texColor = (Lin+L0) * 0.04 + vec3(0.0, 0.0003, 0.00075);\nvec3 curr = Uncharted2Tonemap((log2(2.0/pow(luminance,4.0)))*texColor);\nvec3 color = curr*whiteScale;\nvec3 retColor = pow(color,vec3(1.0/(1.2+(1.2*vSunfade))));\ngl_FragColor.rgb = retColor;\ngl_FragColor.a = 1.0;\n}"};
THREE.Sky=function(){var a=THREE.ShaderLib.sky,b=Object.assign({},a.uniforms),a=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:b,side:THREE.BackSide}),c=new THREE.SphereBufferGeometry(45E4,32,15);this.mesh=new THREE.Mesh(c,a);this.uniforms=b};THREE.SSAOShader={uniforms:{tDiffuse:{value:null},tDepth:{value:null},size:{value:new THREE.Vector2(512,512)},cameraNear:{value:1},cameraFar:{value:100},onlyAO:{value:0},aoClamp:{value:.5},lumInfluence:{value:.5}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float cameraNear;\nuniform float cameraFar;\n#ifdef USE_LOGDEPTHBUF\nuniform float logDepthBufFC;\n#endif\nuniform bool onlyAO;\nuniform vec2 size;\nuniform float aoClamp;\nuniform float lumInfluence;\nuniform sampler2D tDiffuse;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\n#define DL 2.399963229728653\n#define EULER 2.718281828459045\nconst int samples = 8;\nconst float radius = 5.0;\nconst bool useNoise = false;\nconst float noiseAmount = 0.0003;\nconst float diffArea = 0.4;\nconst float gDisplace = 0.4;\n#include <packing>\nvec2 rand( const vec2 coord ) {\nvec2 noise;\nif ( useNoise ) {\nfloat nx = dot ( coord, vec2( 12.9898, 78.233 ) );\nfloat ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );\nnoise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );\n} else {\nfloat ff = fract( 1.0 - coord.s * ( size.x / 2.0 ) );\nfloat gg = fract( coord.t * ( size.y / 2.0 ) );\nnoise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;\n}\nreturn ( noise * 2.0  - 1.0 ) * noiseAmount;\n}\nfloat readDepth( const in vec2 coord ) {\nfloat cameraFarPlusNear = cameraFar + cameraNear;\nfloat cameraFarMinusNear = cameraFar - cameraNear;\nfloat cameraCoef = 2.0 * cameraNear;\n#ifdef USE_LOGDEPTHBUF\nfloat logz = unpackRGBAToDepth( texture2D( tDepth, coord ) );\nfloat w = pow(2.0, (logz / logDepthBufFC)) - 1.0;\nfloat z = (logz / w) + 1.0;\n#else\nfloat z = unpackRGBAToDepth( texture2D( tDepth, coord ) );\n#endif\nreturn cameraCoef / ( cameraFarPlusNear - z * cameraFarMinusNear );\n}\nfloat compareDepths( const in float depth1, const in float depth2, inout int far ) {\nfloat garea = 2.0;\nfloat diff = ( depth1 - depth2 ) * 100.0;\nif ( diff < gDisplace ) {\ngarea = diffArea;\n} else {\nfar = 1;\n}\nfloat dd = diff - gDisplace;\nfloat gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );\nreturn gauss;\n}\nfloat calcAO( float depth, float dw, float dh ) {\nfloat dd = radius - depth * radius;\nvec2 vv = vec2( dw, dh );\nvec2 coord1 = vUv + dd * vv;\nvec2 coord2 = vUv - dd * vv;\nfloat temp1 = 0.0;\nfloat temp2 = 0.0;\nint far = 0;\ntemp1 = compareDepths( depth, readDepth( coord1 ), far );\nif ( far > 0 ) {\ntemp2 = compareDepths( readDepth( coord2 ), depth, far );\ntemp1 += ( 1.0 - temp1 ) * temp2;\n}\nreturn temp1;\n}\nvoid main() {\nvec2 noise = rand( vUv );\nfloat depth = readDepth( vUv );\nfloat tt = clamp( depth, aoClamp, 1.0 );\nfloat w = ( 1.0 / size.x )  / tt + ( noise.x * ( 1.0 - noise.x ) );\nfloat h = ( 1.0 / size.y ) / tt + ( noise.y * ( 1.0 - noise.y ) );\nfloat ao = 0.0;\nfloat dz = 1.0 / float( samples );\nfloat z = 1.0 - dz / 2.0;\nfloat l = 0.0;\nfor ( int i = 0; i <= samples; i ++ ) {\nfloat r = sqrt( 1.0 - z );\nfloat pw = cos( l ) * r;\nfloat ph = sin( l ) * r;\nao += calcAO( depth, pw * w, ph * h );\nz = z - dz;\nl = l + DL;\n}\nao /= float( samples );\nao = 1.0 - ao;\nvec3 color = texture2D( tDiffuse, vUv ).rgb;\nvec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );\nfloat lum = dot( color.rgb, lumcoeff );\nvec3 luminance = vec3( lum );\nvec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\nif ( onlyAO ) {\nfinal = vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\n}\ngl_FragColor = vec4( final, 1.0 );\n}"};window.ThreeBSP=function(){var a;a=function(b){var c,e,f,d,l,k,q,g=[];if(b instanceof THREE.Geometry)this.matrix=new THREE.Matrix4;else if(b instanceof THREE.Mesh)b.updateMatrix(),this.matrix=b.matrix.clone(),b=b.geometry;else{if(b instanceof a.Node)return this.tree=b,this.matrix=new THREE.Matrix4,this;throw"ThreeBSP: Given geometry is unsupported";}c=0;for(e=b.faces.length;c<e;c++){f=b.faces[c];l=b.faceVertexUvs[0][c];q=new a.Polygon;if(f instanceof THREE.Face3)d=b.vertices[f.a],k=l?new THREE.Vector2(l[0].x,
l[0].y):null,d=new a.Vertex(d.x,d.y,d.z,f.vertexNormals[0],k),d.applyMatrix4(this.matrix),q.vertices.push(d),d=b.vertices[f.b],k=l?new THREE.Vector2(l[1].x,l[1].y):null,d=new a.Vertex(d.x,d.y,d.z,f.vertexNormals[1],k),d.applyMatrix4(this.matrix),q.vertices.push(d),d=b.vertices[f.c],k=l?new THREE.Vector2(l[2].x,l[2].y):null,d=new a.Vertex(d.x,d.y,d.z,f.vertexNormals[2],k),d.applyMatrix4(this.matrix),q.vertices.push(d);else if(typeof THREE.Face4)d=b.vertices[f.a],k=l?new THREE.Vector2(l[0].x,l[0].y):
null,d=new a.Vertex(d.x,d.y,d.z,f.vertexNormals[0],k),d.applyMatrix4(this.matrix),q.vertices.push(d),d=b.vertices[f.b],k=l?new THREE.Vector2(l[1].x,l[1].y):null,d=new a.Vertex(d.x,d.y,d.z,f.vertexNormals[1],k),d.applyMatrix4(this.matrix),q.vertices.push(d),d=b.vertices[f.c],k=l?new THREE.Vector2(l[2].x,l[2].y):null,d=new a.Vertex(d.x,d.y,d.z,f.vertexNormals[2],k),d.applyMatrix4(this.matrix),q.vertices.push(d),d=b.vertices[f.d],k=l?new THREE.Vector2(l[3].x,l[3].y):null,d=new a.Vertex(d.x,d.y,d.z,f.vertexNormals[3],
k),d.applyMatrix4(this.matrix),q.vertices.push(d);else throw"Invalid face type at index "+c;q.calculateProperties();g.push(q)}this.tree=new a.Node(g)};a.prototype.subtract=function(b){var c=this.tree.clone();b=b.tree.clone();c.invert();c.clipTo(b);b.clipTo(c);b.invert();b.clipTo(c);b.invert();c.build(b.allPolygons());c.invert();c=new a(c);c.matrix=this.matrix;return c};a.prototype.union=function(b){var c=this.tree.clone();b=b.tree.clone();c.clipTo(b);b.clipTo(c);b.invert();b.clipTo(c);b.invert();
c.build(b.allPolygons());c=new a(c);c.matrix=this.matrix;return c};a.prototype.intersect=function(b){var c=this.tree.clone();b=b.tree.clone();c.invert();b.clipTo(c);b.invert();c.clipTo(b);b.clipTo(c);c.build(b.allPolygons());c.invert();c=new a(c);c.matrix=this.matrix;return c};a.prototype.toGeometry=function(){var a,c,e=(new THREE.Matrix4).getInverse(this.matrix),f=new THREE.Geometry,d=this.tree.allPolygons(),l=d.length,k,q,g={},n,r,m,v;for(a=0;a<l;a++)for(k=d[a],q=k.vertices.length,c=2;c<q;c++)v=
[],m=k.vertices[0],v.push(new THREE.Vector2(m.uv.x,m.uv.y)),m=new THREE.Vector3(m.x,m.y,m.z),m.applyMatrix4(e),"undefined"!==typeof g[m.x+","+m.y+","+m.z]?n=g[m.x+","+m.y+","+m.z]:(f.vertices.push(m),n=g[m.x+","+m.y+","+m.z]=f.vertices.length-1),m=k.vertices[c-1],v.push(new THREE.Vector2(m.uv.x,m.uv.y)),m=new THREE.Vector3(m.x,m.y,m.z),m.applyMatrix4(e),"undefined"!==typeof g[m.x+","+m.y+","+m.z]?r=g[m.x+","+m.y+","+m.z]:(f.vertices.push(m),r=g[m.x+","+m.y+","+m.z]=f.vertices.length-1),m=k.vertices[c],
v.push(new THREE.Vector2(m.uv.x,m.uv.y)),m=new THREE.Vector3(m.x,m.y,m.z),m.applyMatrix4(e),"undefined"!==typeof g[m.x+","+m.y+","+m.z]?m=g[m.x+","+m.y+","+m.z]:(f.vertices.push(m),m=g[m.x+","+m.y+","+m.z]=f.vertices.length-1),n=new THREE.Face3(n,r,m,new THREE.Vector3(k.normal.x,k.normal.y,k.normal.z)),f.faces.push(n),f.faceVertexUvs[0].push(v);return f};a.prototype.toMesh=function(a){var b=this.toGeometry();a=new THREE.Mesh(b,a);a.position.setFromMatrixPosition(this.matrix);a.rotation.setFromRotationMatrix(this.matrix);
return a};a.Polygon=function(a,c,e){a instanceof Array||(a=[]);this.vertices=a;0<a.length?this.calculateProperties():this.normal=this.w=void 0};a.Polygon.prototype.calculateProperties=function(){var a=this.vertices[0],c=this.vertices[2];this.normal=this.vertices[1].clone().subtract(a).cross(c.clone().subtract(a)).normalize();this.w=this.normal.clone().dot(a);return this};a.Polygon.prototype.clone=function(){var b,c,e=new a.Polygon;b=0;for(c=this.vertices.length;b<c;b++)e.vertices.push(this.vertices[b].clone());
e.calculateProperties();return e};a.Polygon.prototype.flip=function(){var a,c=[];this.normal.multiplyScalar(-1);this.w*=-1;for(a=this.vertices.length-1;0<=a;a--)c.push(this.vertices[a]);this.vertices=c;return this};a.Polygon.prototype.classifyVertex=function(a){a=this.normal.dot(a)-this.w;return-1E-5>a?2:1E-5<a?1:0};a.Polygon.prototype.classifySide=function(a){var b,e,f=0,d=0,l=a.vertices.length;for(b=0;b<l;b++)e=a.vertices[b],e=this.classifyVertex(e),1===e?f++:2===e&&d++;return 0<f&&0===d?1:0===
f&&0<d?2:0===f&&0===d?0:3};a.Polygon.prototype.splitPolygon=function(b,c,e,f,d){var l=this.classifySide(b);if(0===l)(0<this.normal.dot(b.normal)?c:e).push(b);else if(1===l)f.push(b);else if(2===l)d.push(b);else{var k,q,g,n,l=[],r=[];e=0;for(c=b.vertices.length;e<c;e++)k=(e+1)%c,n=b.vertices[e],k=b.vertices[k],q=this.classifyVertex(n),g=this.classifyVertex(k),2!=q&&l.push(n),1!=q&&r.push(n),3===(q|g)&&(q=(this.w-this.normal.dot(n))/this.normal.dot(k.clone().subtract(n)),n=n.interpolate(k,q),l.push(n),
r.push(n));3<=l.length&&f.push((new a.Polygon(l)).calculateProperties());3<=r.length&&d.push((new a.Polygon(r)).calculateProperties())}};a.Vertex=function(a,c,e,f,d){this.x=a;this.y=c;this.z=e;this.normal=f||new THREE.Vector3;this.uv=d||new THREE.Vector2};a.Vertex.prototype.clone=function(){return new a.Vertex(this.x,this.y,this.z,this.normal.clone(),this.uv.clone())};a.Vertex.prototype.add=function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this};a.Vertex.prototype.subtract=function(a){this.x-=
a.x;this.y-=a.y;this.z-=a.z;return this};a.Vertex.prototype.multiplyScalar=function(a){this.x*=a;this.y*=a;this.z*=a;return this};a.Vertex.prototype.cross=function(a){var b=this.x,e=this.y,f=this.z;this.x=e*a.z-f*a.y;this.y=f*a.x-b*a.z;this.z=b*a.y-e*a.x;return this};a.Vertex.prototype.normalize=function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);this.x/=a;this.y/=a;this.z/=a;return this};a.Vertex.prototype.dot=function(a){return this.x*a.x+this.y*a.y+this.z*a.z};a.Vertex.prototype.lerp=
function(a,c){this.add(a.clone().subtract(this).multiplyScalar(c));this.normal.add(a.normal.clone().sub(this.normal).multiplyScalar(c));this.uv.add(a.uv.clone().sub(this.uv).multiplyScalar(c));return this};a.Vertex.prototype.interpolate=function(a,c){return this.clone().lerp(a,c)};a.Vertex.prototype.applyMatrix4=function(a){var b=this.x,e=this.y,f=this.z;a=a.elements;this.x=a[0]*b+a[4]*e+a[8]*f+a[12];this.y=a[1]*b+a[5]*e+a[9]*f+a[13];this.z=a[2]*b+a[6]*e+a[10]*f+a[14];return this};a.Node=function(b){var c,
e,f=[],d=[];this.polygons=[];this.front=this.back=void 0;if(b instanceof Array&&0!==b.length){this.divider=b[0].clone();c=0;for(e=b.length;c<e;c++)this.divider.splitPolygon(b[c],this.polygons,this.polygons,f,d);0<f.length&&(this.front=new a.Node(f));0<d.length&&(this.back=new a.Node(d))}};a.Node.isConvex=function(a){var b,e;for(b=0;b<a.length;b++)for(e=0;e<a.length;e++)if(b!==e&&2!==a[b].classifySide(a[e]))return!1;return!0};a.Node.prototype.build=function(b){var c,e,f=[],d=[];this.divider||(this.divider=
b[0].clone());c=0;for(e=b.length;c<e;c++)this.divider.splitPolygon(b[c],this.polygons,this.polygons,f,d);0<f.length&&(this.front||(this.front=new a.Node),this.front.build(f));0<d.length&&(this.back||(this.back=new a.Node),this.back.build(d))};a.Node.prototype.allPolygons=function(){var a=this.polygons.slice();this.front&&(a=a.concat(this.front.allPolygons()));this.back&&(a=a.concat(this.back.allPolygons()));return a};a.Node.prototype.clone=function(){var b=new a.Node;b.divider=this.divider.clone();
b.polygons=this.polygons.map(function(a){return a.clone()});b.front=this.front&&this.front.clone();b.back=this.back&&this.back.clone();return b};a.Node.prototype.invert=function(){var a,c;a=0;for(c=this.polygons.length;a<c;a++)this.polygons[a].flip();this.divider.flip();this.front&&this.front.invert();this.back&&this.back.invert();a=this.front;this.front=this.back;this.back=a;return this};a.Node.prototype.clipPolygons=function(a){var b,e,f,d;if(!this.divider)return a.slice();f=[];d=[];b=0;for(e=a.length;b<
e;b++)this.divider.splitPolygon(a[b],f,d,f,d);this.front&&(f=this.front.clipPolygons(f));d=this.back?this.back.clipPolygons(d):[];return f.concat(d)};a.Node.prototype.clipTo=function(a){this.polygons=a.clipPolygons(this.polygons);this.front&&this.front.clipTo(a);this.back&&this.back.clipTo(a)};return a}();
